---
# Completion Report Template v2
# Powered by BMADâ„¢ Core

template:
  id: completion-report-template-v2
  name: Completion Report
  version: 2.0
  output:
    format: markdown
    filename: docs/completion-report.md
    title: "{{project_name}} Completion Report"
    note: "Comprehensive project delivery summary with key learnings and evidence"

sections:
  - id: report-header
    title: Project Information
    instruction: |
      **Project Name:** {project_name}
      **Version:** {version - parse from *.lock file}
      **Completion Date:** {date}
      **Workflow Type:** PRD / Traditional / Full
      **Delivered By:** {team or agent}

  - id: executive-summary
    title: Executive Summary
    instruction: |
      Provide a high-level summary (3-5 paragraphs) covering:
      
      - **Project Goals:** What was the project meant to achieve
      - **Delivery Scope:** What was actually delivered
      - **Key Achievements:** Major accomplishments
      - **Critical Challenges:** Significant obstacles overcome
      - **Overall Outcome:** Success metrics and business value delivered
      
      This summary should be understandable by non-technical stakeholders.

  - id: key-decisions
    title: Key Decisions
    repeatable: true
    instruction: |
      Document all major decisions made during the project.
      These are the "why we did it this way" explanations.
      
      **Decision {number}:** {Decision Title}
      
      **Context:**
      - What situation or requirement led to this decision?
      - What constraints existed?
      - What requirements drove this?
      
      **Decision:**
      - What was decided?
      - Clear statement of the chosen approach
      
      **Rationale:**
      - Why this approach was chosen
      - What benefits it provides
      - What problems it solves
      
      **Trade-offs:**
      - What advantages were gained
      - What disadvantages were accepted
      - What alternatives were rejected and why
      
      **Evidence:**
      - Source: {file_path:line_number}
      - Documentation: {document_path#section}
      
      Examples of key decisions:
      - Architecture patterns chosen
      - Technology stack selections
      - Data modeling approaches
      - Integration strategies
      - Performance optimization choices

  - id: technical-choices
    title: Technical Choices
    repeatable: true
    instruction: |
      Document significant technical selections and their rationale.
      
      **Technical Choice:** {Technology/Pattern/Tool Name}
      
      **Category:** Architecture / Technology / Pattern / Integration / Tool
      
      **Purpose:** Why this was needed
      
      **Alternatives Considered:**
      - {Alternative 1}: {pros and cons}
      - {Alternative 2}: {pros and cons}
      
      **Pros:**
      - {advantage 1}
      - {advantage 2}
      
      **Cons:**
      - {disadvantage 1}
      - {disadvantage 2}
      
      **Rationale:**
      Why this choice was made over alternatives
      
      **Evidence:**
      - Source: {file_path:line_number}
      - Documentation: {document_path#section}
      
      Examples:
      - Framework selections (React vs Vue vs Angular)
      - Database choices (PostgreSQL vs MongoDB)
      - Hosting decisions (AWS vs GCP vs Azure)
      - Communication patterns (REST vs GraphQL vs gRPC)

  - id: issues-and-solutions
    title: Issues and Solutions
    repeatable: true
    instruction: |
      Document significant problems encountered and how they were resolved.
      These are valuable learnings for future projects.
      
      **Issue {number}:** {Issue Title}
      
      **Severity:** Critical / High / Medium / Low
      
      **Context:**
      - When did this occur? (phase/task)
      - What was being attempted?
      - What requirements were affected?
      
      **Root Cause:**
      - Technical cause (if applicable)
      - Process cause (if applicable)
      - External factors (if applicable)
      
      **Solution:**
      - How it was resolved
      - What changes were made
      - Who resolved it
      
      **Prevention Measures:**
      - How to prevent this in future projects
      - Process improvements identified
      - Tools or practices to adopt
      
      **Evidence:**
      - Source: {file_path:line_number}
      - Review/Dev notes: {document_path#section}
      
      Examples:
      - Integration challenges with external APIs
      - Performance bottlenecks discovered
      - Security vulnerabilities found and fixed
      - Design conflicts requiring rework
      - Test failures requiring architecture changes

  - id: evidence-summary
    title: Evidence and Verification
    instruction: |
      Consolidate all evidence supporting the completion report.
      This section provides traceability and verification.
      
      **Code References:**
      Key implementation files and line ranges:
      - {file_path:Lstart-Lend} - {description}
      - {file_path:Lstart-Lend} - {description}
      
      **Document References:**
      Source documents consulted:
      - {document_path#section} - {what was referenced}
      - {document_path#section} - {what was referenced}
      
      **Test Results:**
      Evidence of quality and functionality:
      - Test coverage: {percentage}%
      - Total tests: {count}
      - All tests passing: Yes / No
      - Review scores: {summary}
      - Cutover status: {status}
      
      **Verification Notes:**
      - All requirements traced to implementation: Yes / No
      - All acceptance criteria met: Yes / No
      - All DoD items satisfied: Yes / No
      - Production readiness: Yes / No
      
      Evidence format: Use file_path:line_number for code, file_path#section for docs

  - id: recommendations
    title: Recommendations
    instruction: |
      Provide actionable recommendations based on project learnings.
    sections:
      - id: immediate-actions
        title: Immediate Actions
        repeatable: true
        instruction: |
          Actions to take right away:
          
          **Action:** {what to do}
          
          **Priority:** Critical / High / Medium / Low
          
          **Rationale:** {why this is important}
          
          **Timeline:** {when this should be done}
          
          Examples:
          - Critical security patches needed
          - Performance optimizations required before scale
          - Missing documentation to complete
          - Configuration updates needed
      
      - id: future-improvements
        title: Future Improvements
        repeatable: true
        instruction: |
          Enhancements for future iterations:
          
          **Improvement:** {what could be improved}
          
          **Category:** Performance / Security / Maintainability / Scalability / UX
          
          **Expected Benefit:** {value this would provide}
          
          **Effort Estimate:** Small / Medium / Large
          
          Examples:
          - Caching layer to improve performance
          - Refactoring for better maintainability
          - Additional monitoring and alerting
          - Feature enhancements requested
          - Architecture evolution paths
      
      - id: lessons-learned
        title: Lessons Learned
        repeatable: true
        instruction: |
          Key takeaways from this project:
          
          **Lesson:** {what was learned}
          
          **Category:** Process / Technical / Communication / Planning
          
          **Context:** {situation where this applies}
          
          **Application:** {how to apply this learning}
          
          Examples:
          - Process improvements that worked well
          - Technical approaches to repeat or avoid
          - Communication patterns that were effective
          - Planning techniques that helped or hindered

  - id: technical-debt
    title: Technical Debt
    instruction: |
      Document the state of technical debt at project completion.
      
      **Items Added During Project:**
      - {debt item}: {reason and priority}
      
      **Items Resolved During Project:**
      - {debt item}: {how resolved}
      
      **Items Remaining:**
      Priority order list of technical debt:
      
      **Critical:**
      - {item}: {description and impact}
      
      **High:**
      - {item}: {description and impact}
      
      **Medium:**
      - {item}: {description and impact}
      
      **Low:**
      - {item}: {description and impact}
      
      **Debt Management Plan:**
      - Strategy for addressing remaining debt
      - Prioritization approach
      - Recommended timeline

  - id: metrics-and-outcomes
    title: Project Metrics and Outcomes
    instruction: |
      Quantify project outcomes where possible:
      
      **Requirements Delivered:**
      - Functional requirements: {delivered} of {total}
      - Non-functional requirements: {delivered} of {total}
      - Overall completion: {percentage}%
      
      **Quality Metrics:**
      - Average review score: {score}
      - Test coverage: {percentage}%
      - Total tests written: {count}
      - Critical issues: {count}
      
      **Timeline:**
      - Planned duration: {duration}
      - Actual duration: {duration}
      - Variance: {difference}
      
      **Technical Metrics:**
      - Lines of code: {approximate count}
      - Files created: {count}
      - Components/services: {count}
      - Dependencies added: {count}

  - id: archive-information
    title: Archive Information
    instruction: |
      Document what was archived and where:
      
      **Archive Location:** {ARCHIVE}/{version_name}/
      
      **Archived Items:**
      List all items moved to archive:
      - {file or directory} - {type of content}
      
      **Preserved Items:**
      Items that remain in docs/:
      - architecture/ - Current architecture state
      - knowledge/ - Accumulated knowledge base
      - completion-report.md - This document
      
      **Archive Access:**
      - How to access archived materials
      - Reference format for archived docs
      - Version information

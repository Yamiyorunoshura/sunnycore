---
template: implementation-plan
version: 1

# Note: Plan validation is now handled by specialized developer workflows
# This template focuses on structured planning content, validation is executed by corresponding developer workflows

# Context preservation requirements
# - Include all valuable technical details from specifications
# - Avoid generic statements like "as needed" or "TBD"
# - Reference specific files, line numbers, and design decisions
# - Maintain clear traceability between plan elements and source specifications

metadata:
  task_id: "Required - Actual task identifier"
  project_name: "Required - Actual project name"
  owner: "Required - Actual responsible person name"
  date: "Required - YYYY-MM-DD format"
  project_root: "Required - Project root directory absolute path"
  sources:
    - type: requirements
      path: "Required - Actual requirements.md path"
    - type: task
      path: "Required - Actual task.md path"
    - type: design
      path: "Required - Actual design.md path"
  assumptions:
    - "List specific assumptions or state 'none identified'"
  constraints:
    - "List specific constraints or state 'none identified'"

context:
  summary: "Required - 1-3 specific sentences describing what this task completion entails"
  background: "Required - Specific background from specifications"
  goals:
    - "Required - Specific objectives extracted from requirements"

objectives:
  functional:
    - id: "F-1"
      description: "Required - Specific functional requirements from specifications"
      acceptance_criteria:
        - "Required - Specific, testable acceptance criteria"
  non_functional:
    - id: "N-1"
      description: "Required - Specific non-functional requirements"
      measurement: "Required - Measurable targets (e.g.: p95 < 200ms, 99.9% uptime)"

scope:
  in_scope:
    - "Required - Specific items included in this task"
  out_of_scope:
    - "Required - Specific items explicitly excluded"

approach:
  architecture_overview: "Required - Specific architecture from design specifications"
  modules:
    - name: "Required - Actual module name"
      purpose: "Required - Specific purpose and responsibilities"
      interfaces:
        - "Required - Specific API/contract definitions"
      reuse:
        - "List existing modules/services to reuse or state 'none'"
  data:
    schema_changes:
      - "Required - Specific database/data structure changes"
    migrations:
      - "Required - Specific migration steps or state 'not required'"
  test_strategy:
    unit:
      - "Required - Specific unit test areas and methods"
    integration:
      - "Required - Specific integration test scenarios"
    acceptance:
      - "Required - Specific acceptance test conditions"
  quality_gates:
    - "Required - Measurable quality conditions (e.g.: >=90% unit coverage, <500ms p95)"

milestones:
  - name: "<M1>"
    deliverables:
      - "<Deliverables>"
    done_definition:
      - "<Done definition items>"

timeline:
  start_date: "<YYYY-MM-DD>"
  end_date: "<YYYY-MM-DD>"
  schedule:
    - milestone: "<M1>"
      start: "<YYYY-MM-DD>"
      end: "<YYYY-MM-DD>"

dependencies:
  external:
    - "<Service/Library>"
  internal:
    - "<Team/Module>"

estimation:
  method: "<T-shirt size|Story points|Hours>"
  summary:
    total_person_days: "<N>"
    confidence: "<Low|Medium|High>"
  breakdown:
    - work_item: "<Item>"
      estimate: "<Estimate>"

risks:
  - id: "R1"
    description: "<Risk>"
    probability: "<Low|Medium|High>"
    impact: "<Low|Medium|High>"
    mitigation: "<Mitigation measures>"
    contingency: "<Contingency plan>"

open_questions:
  - "<Question>"

notes:
  - "<Note>"

dev_notes_location: "docs/dev-notes/{task_id}`(e.g.`1`, `2`, `3`...)-dev-notes.md"
dev_notes_schema: "Reference dev_notes_v1 structure in corresponding developer workflow"
dev_notes_note: "Developers will maintain detailed records in separate files during implementation, not in the plan file"


---
template: architecture-doc
version: 1

metadata:
  generated_by: "architecture-documenter"
  date: "YYYY-MM-DD"
  sources:
    specs:
      requirements: "<path>"
      task: "<path>"
      design: "<path>"
    plans: [] # implementation plans
    code_refs: [] # main interface/model/configuration file paths

system_context:
  description: "<System positioning and main external dependencies>"
  diagram: |
    ```mermaid
    graph LR
      User-->Frontend
      Frontend-->Backend
      Backend-->DB[(Database)]
      Backend-->ExternalAPI
    ```

container_view:
  services:
    - name: "<Service>"
      responsibilities: ["<responsibility>"]
      interfaces: ["<API or contract>"]
      data_stores: ["<DB/Cache/Topic>"]

component_view:
  modules:
    - name: "<Module>"
      purpose: "<function>"
      dependencies: ["<dependency>"]
      diagram: |
        ```mermaid
        flowchart LR
          A[Entry]-->B[Core]
          B-->C[Adapter]
        ```

data_model:
  schema:
    - entity: "<Name>"
      fields:
        - name: "<field>"
          type: "<type>"
          constraints: ["<constraints>"]
  migrations:
    - id: MIG-001
      description: "<change description>"

api_contracts:
  endpoints:
    - method: GET
      path: "/example"
      request: {}
      response: {}

deployment_observability:
  environments: ["dev","staging","prod"]
  deployment: "<process and tools>"
  logging: "<structured logging strategy>"
  monitoring: "<metrics and alerts>"

adr_links:
  - id: ADR-001
    title: "<decision title>"
    decision: "<summary>"
    rationale: "<rationale>"
    consequences: "<consequences>"

consistency_checks:
  plan_alignment: "<plan vs implementation differences>"
  contract_sync: "<contract synchronization status>"
  known_gaps: []

{
  "metadata": {
    "prompt_name": "brownfield-tasks",
    "review_date": "2025-09-29",
    "reviewer": "Prompt Quality Evaluator",
    "version": "v1.0",
    "prompt_type": "tasks"
  },
  "overall_score": 94.75,
  "grade": "Excellent",
  "dimensions": {
    "correctness": {
      "score": 95,
      "evidence": "Tasks template used correctly; required tags present; stage IDs and <tools> conform; checks in last stage.",
      "issues": []
    },
    "clarity": {
      "score": 94,
      "evidence": "Concise steps and explicit deliverables; â‰¤3 bullets per stage; highly scannable.",
      "issues": []
    },
    "cognitive_load": {
      "score": 95,
      "evidence": "Four stages with short, ordered steps; minimal overhead to follow.",
      "issues": []
    },
    "reasoning_guidance": {
      "score": 93,
      "evidence": "Per-stage questions guide analysis; acceptance checks placed in the last stage.",
      "issues": []
    },
    "alignment": {
      "score": 95,
      "evidence": "Complies with GUIDE naming/ID/enum rules; importance attribute formatted per spec.",
      "issues": [
        "Optional: <output> is not a JSON Schema (best-practice enhancement).",
        "Optional: <tools> lack parameters/returns schemas and selection rules."
      ]
    },
    "completeness": {
      "score": 96,
      "evidence": "Contains <input>, <output>, <constraints>, <workflow>, <questions>, and <checks>.",
      "issues": []
    },
    "constraint_design": {
      "score": 95,
      "evidence": "Constraints are measurable and actionable (minimal/reversible changes, tests, lint/policy).",
      "issues": []
    },
    "user_experience": {
      "score": 95,
      "evidence": "Numbered lists and consistent wording deliver a smooth, predictable UX.",
      "issues": []
    }
  },
  "recommendations": [
    "MEDIUM: Provide a strict JSON Schema in <output> with an example (additionalProperties=false).",
    "MEDIUM: Add tools parameters/returns JSON Schemas and selection rules; define retries/on-failure.",
    "LOW: Include a minimal <example> of dev-notes output to set expectations.",
    "LOW: Consider adding guardrails (in related prompts) to document anti-injection boundaries."
  ],
  "advisory_suggestions": [
    "Auto-validate dev-notes file path and naming via checks or tests.",
    "Add observability fields (trace_id/prompt_version) if adopting stricter operations." 
  ],
  "strengths": [
    "Clear workflow with concrete deliverables and acceptance checks.",
    "Actionable, measurable constraints supporting safe, reversible changes.",
    "Good per-stage questions focusing on risks and validation."
  ],
  "summary": "Highly compliant tasks prompt with excellent structure and measurable constraints; only optional schema/tool metadata enhancements remain."
}



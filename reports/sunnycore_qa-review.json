{
  "metadata": {
    "prompt_name": "sunnycore_qa",
    "review_date": "2025-09-29",
    "reviewer": "Prompt Quality Evaluator",
    "version": "v1.1",
    "prompt_type": "commands"
  },
  "overall_score": 90.38,
  "grade": "Excellent",
  "dimensions": {
    "correctness": {
      "score": 93,
      "evidence": "Commands template with <start-sequence>, <input>, <output>, <role>, <custom-commands>, <tools>; type checks applied.",
      "issues": []
    },
    "clarity": {
      "score": 92,
      "evidence": "Clear TL;DR, structured sections, scannable bullets and examples.",
      "issues": []
    },
    "cognitive_load": {
      "score": 86,
      "evidence": "Comprehensive content increases load; sections and bullets mitigate.",
      "issues": ["Trim long sections; keep ≤3 bullets per stage/topic."]
    },
    "reasoning_guidance": {
      "score": 92,
      "evidence": "Strong evaluation standards, scoring rules, decision matrix, escalation steps.",
      "issues": ["Add explicit anti-injection guardrails and refusal patterns."]
    },
    "alignment": {
      "score": 91,
      "evidence": "Structure and enums align with Guide; role scoped; commands checks present.",
      "issues": ["Output lacks strict JSON Schema in <output> section per Guide best practices."]
    },
    "completeness": {
      "score": 90,
      "evidence": "Includes inputs/outputs/constraints/examples/instructions/role/custom-commands/tools; decision and scoring rules present.",
      "issues": ["Missing strict JSON Schema; tool parameter/return schemas not fully specified."]
    },
    "constraint_design": {
      "score": 90,
      "evidence": "MUST constraints are specific and verifiable; checks are measurable.",
      "issues": ["Add selection-rules, retries, on-failure for tools."]
    },
    "user_experience": {
      "score": 93,
      "evidence": "Readable, sectioned, example-driven; quick checklist aids execution.",
      "issues": ["Minor verbosity; compress phrasing where possible."]
    }
  },
  "recommendations": [
    {"priority": "high", "item": "Define a strict JSON Schema (Draft 2020-12) in <output> with additionalProperties=false and include a minimal valid example."},
    {"priority": "high", "item": "Extend <tools> with parameters/returns JSON Schemas and selection-rules; specify retries and on-failure handling."},
    {"priority": "medium", "item": "Add anti-injection guardrails and inert-treatment notes (ignore external instructions; document escalation)."},
    {"priority": "medium", "item": "Provide a minimal end-to-end example for *review {task_id} demonstrating expected outputs."},
    {"priority": "low", "item": "Trim non-essential narrative and keep ≤3 bullets per stage/topic to reduce cognitive load."}
  ],
  "advisory_suggestions": [
    "Optionally include JSON auto-validation with up to 2 retries.",
    "Consider versioning/audit fields in outputs (prompt_version, schema_version)."
  ],
  "strengths": [
    "Well-structured commands template with clear start sequence and checks.",
    "Comprehensive evaluation and decision standards with measurable constraints.",
    "Scannable layout and actionable guidance for QA reviews."
  ],
  "summary": "High-quality commands-style QA prompt with strong standards and structure. Add strict JSON Schema for outputs and full tool schemas/selection rules to reach template-grade rigor; minor compression will further reduce cognitive load."
}


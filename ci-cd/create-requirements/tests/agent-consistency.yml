# Create Requirements Agent一致性測試
# 此配置驗證create-requirements任務在相同輸入下的輸出穩定性

description: "Create Requirements Agent Consistency Tests"

providers:
  - claude-sonnet

prompts:
  - file: prompts/create-requirements-stage1.md
  - file: prompts/create-requirements-full.md

tests:
  # 簡單需求一致性測試
  - description: "簡單需求分析一致性測試"
    vars:
      user_input: "我想建立一個簡單的待辦事項管理應用，用戶可以新增、編輯、刪除和標記完成待辦事項。"
    options:
      provider: claude-sonnet
      runs: 5  # 執行5次確保一致性
    assert:
      - type: similarity
        threshold: 0.85
        description: "多次執行結果相似度需>=85%"
      - type: contains-all
        values: ["functional_requirements", "non_functional_requirements"]
        description: "必須包含功能性和非功能性需求分類"
      - type: contains
        value: "F-001"
        description: "功能需求必須有標準ID格式"
      - type: contains
        value: "acceptance_criteria"
        description: "必須包含驗收標準"
      - type: latency
        threshold: 30000
        description: "回應時間需<30秒"

  # 中等複雜度需求一致性測試  
  - description: "中等複雜度需求一致性測試"
    vars:
      user_input: "開發一個線上書店系統，包含用戶註冊登入、書籍瀏覽搜索、購物車管理、訂單處理、支付整合和庫存管理功能。"
    options:
      provider: claude-sonnet
      runs: 4
    assert:
      - type: similarity
        threshold: 0.80
        description: "複雜需求多次執行相似度需>=80%"
      - type: contains-all
        values: ["用戶", "書籍", "購物車", "訂單", "支付"]
        description: "必須涵蓋所有核心功能領域"
      - type: llm-rubric
        value: "需求分析正確區分了功能性和非功能性需求，功能需求具體可實現，非功能需求有量化指標"
        description: "需求品質評估"
      - type: custom-function
        value: |
          function(output) {
            // 檢查功能需求數量合理性
            const matches = output.match(/F-\d{3}/g) || [];
            const functionalReqCount = matches.length;
            
            // 檢查非功能需求存在
            const hasNonFunctional = output.includes('NFR-') || output.includes('non_functional');
            
            // 評分標準
            let score = 0;
            if (functionalReqCount >= 5 && functionalReqCount <= 15) score += 50; // 需求數量合理
            if (hasNonFunctional) score += 50; // 包含非功能需求
            
            return { 
              pass: score >= 80, 
              score: score / 100,
              reason: `功能需求數量: ${functionalReqCount}, 包含非功能需求: ${hasNonFunctional}`
            };
          }
        description: "需求數量和類型檢查"

  # 複雜企業級需求一致性測試
  - description: "複雜企業級需求一致性測試"
    vars:
      user_input: "構建一個企業級CRM系統，支援多租戶架構、客戶管理、銷售流程管理、報表分析、整合第三方系統、角色權限管理，需要支援高可用性、資料備份、安全合規和效能監控。"
    options:
      provider: claude-sonnet
      runs: 3
    assert:
      - type: similarity
        threshold: 0.75
        description: "企業級複雜需求相似度需>=75%"
      - type: contains-all
        values: ["多租戶", "CRM", "權限", "高可用", "安全", "效能"]
        description: "必須包含所有關鍵企業級需求"
      - type: llm-rubric
        value: "企業級需求分析完整，包含架構考量、合規要求、運維需求，非功能需求有具體的SLA指標"
        description: "企業級需求品質評估"
      - type: json-schema
        value: |
          {
            "type": "object",
            "required": ["project_info", "functional_requirements", "non_functional_requirements"],
            "properties": {
              "project_info": {
                "type": "object",
                "required": ["name", "description"]
              },
              "functional_requirements": {
                "type": "array",
                "minItems": 8,
                "items": {
                  "type": "object",
                  "required": ["id", "title", "description", "acceptance_criteria"]
                }
              },
              "non_functional_requirements": {
                "type": "array",
                "minItems": 3,
                "items": {
                  "type": "object",
                  "required": ["id", "description", "type"]
                }
              }
            }
          }
        description: "企業級需求結構完整性檢查"

  # 邊界條件測試：模糊輸入
  - description: "模糊輸入處理一致性測試"
    vars:
      user_input: "我想做個系統，要很好用。"
    options:
      provider: claude-sonnet
      runs: 3
    assert:
      - type: similarity
        threshold: 0.80
        description: "模糊輸入處理一致性>=80%"
      - type: contains-any
        values: ["澄清", "問題", "需要了解", "請提供更多", "詳細資訊"]
        description: "應該提供澄清問題協助用戶"
      - type: llm-rubric
        value: "面對模糊輸入，agent提供了適當的引導問題來澄清用戶真正的需求，展現良好的需求收集能力"
        description: "模糊輸入處理品質"

  # 工具使用一致性測試
  - description: "工具調用一致性測試"
    vars:
      user_input: "開發一個電商網站，需要商品管理和訂單處理功能。"
    options:
      provider: claude-sonnet
      runs: 4
    assert:
      - type: contains
        value: "Sequential-thinking Tool"
        description: "必須使用Sequential-thinking Tool進行深度分析"
      - type: contains
        value: "Todo-list Tool"
        description: "必須使用Todo-list Tool進行任務管理"
      - type: similarity
        threshold: 0.85
        description: "工具使用模式一致性>=85%"
      - type: custom-function
        value: |
          function(output) {
            const hasSequentialThinking = output.includes('Sequential-thinking') || output.includes('sequential thinking');
            const hasTodoList = output.includes('Todo-list') || output.includes('todo list');
            const hasTemplateUsage = output.includes('template') || output.includes('requirement-tmpl');
            
            let toolUsageScore = 0;
            if (hasSequentialThinking) toolUsageScore += 40;
            if (hasTodoList) toolUsageScore += 30;
            if (hasTemplateUsage) toolUsageScore += 30;
            
            return {
              pass: toolUsageScore >= 70,
              score: toolUsageScore / 100,
              reason: `工具使用: Sequential-thinking(${hasSequentialThinking}), Todo-list(${hasTodoList}), Template(${hasTemplateUsage})`
            };
          }
        description: "工具使用完整性檢查"

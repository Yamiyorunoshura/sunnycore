---
# QA執行流程 - AI處理的結構化工作流程
# 版本：2.1（YAML格式）
# 目的：具有6個核心階段的證據驅動實施審查

metadata:
  name: "QA執行流程"
  version: "2.1"
  format: "yaml"
  target_audience: "AI代理"
  description: "全面實施審查的結構化工作流程"
  
overview:
  description: "Evidence-driven implementation review with 6 core stages"
  report_template: "~/Coding/AI workflow/core/templates/review-tmpl.yaml"
  stages:
    - id: 1
      name: "初始化與證據收集"
      description: "Load workflow, gather all implementation evidence"
    - id: 2
      name: "範圍與合規性分析"
      description: "Verify scope alignment and requirements conformance"
    - id: 3
      name: "品質評估"
      description: "Assess implementation against 7-dimension quality framework"
    - id: 4
      name: "問題發現與建議"
      description: "Identify issues, rank by severity, propose actionable fixes"
    - id: 5
      name: "報告生成與驗證"
      description: "Generate/update template-compliant report and handle task completion"
    - id: 6
      name: "更新任務文件"
      description: "根據審查結果更新 task.md"

execution_protocol:
  enforcement_compliance:
    mandatory_enforcement_file: "~/Coding/AI workflow/core/enforcement/task-reviewer-enforcement.md"
    note: "All detailed enforcement rules, validation criteria, and quality standards are defined in the enforcement file"

execution_context:
  determinism:
    temperature: 0
    top_p: 0.1
    frequency_penalty: 0
    presence_penalty: 0
    reproducible_seed: "{task_id}"
  parallelization:
    guidance: "Run read-only discovery actions in parallel where independent"
    batch_rules:
      - "Combine file reads, globs and grep/codebase searches via parallel tool calls"
      - "Cap to 3-5 concurrent calls to avoid timeouts"
      - "Prefer parallel for Stage 1 and quality dimension discovery in Stage 3"
  caching:
    policy: "Cache file contents by absolute path and mtime; avoid re-reading unchanged files"
  path_resolution:
    project_root: "{project_root}"
    fallback_order:
      enforcement_file:
        - "~/Coding/AI workflow/core/enforcement/task-reviewer-enforcement.md"
        - "core/enforcement/task-reviewer-enforcement.md"
      workflow_file:
        - "~/Coding/AI workflow/core/workflow/unified-review-workflow.yaml"
        - "core/workflow/unified-review-workflow.yaml"
      report_template:
        - "~/Coding/AI workflow/core/templates/review-tmpl.yaml"
        - "core/templates/review-tmpl.yaml"
      specs_root:
        - "docs/specs/"
        - "docs/specs/"
        - "specs/"
  timeboxes:
    per_tool_call_seconds: 25
    overall_stage_budget_minutes:
      stage_1: 4
      stage_2: 6
      stage_3: 6
      stage_4: 4
      stage_5: 5
      stage_6: 2
  failure_policy:
    on_missing_primary_path: "Use fallback order; if none available, STOP per error_handling.validation_failure_protocol"

stages:
  stage_1:
    id: 1
    name: "初始化與證據收集"
    name_en: "Initialize & Collect Evidence"
    objectives:
      - "Determine review mode (initial vs follow-up)"
      - "Gather all required implementation evidence"
      - "Set review scope and focus areas"
    
    actions:
      file_checks:
        - tool: "glob_file_search"
          pattern: "{task_id}-review.*"
          location: "docs/implementation-review/"
          purpose: "Check existing review documents"
          
      spec_gathering:
        - tool: "glob_file_search"
          pattern: "docs/specs/**"
          pattern_alt:
            - "docs/specs/**"
            - "specs/**"
          purpose: "Discover all specification files under docs/specs/"
        - tool: "read_file"
          files: "<from previous glob_file_search>"
          purpose: "Gather specification sources (all docs/specs/**)"
        - tool: "read_file"
          files:
            - "docs/specs/task.md"
            - "docs/specs/requirements.md"
            - "docs/specs/design.md"
          purpose: "Ensure core specs explicitly loaded"
          note: "If docs/specs/ is absent, resolve using execution_context.path_resolution.specs_root"
          
      plan_discovery:
        - tool: "glob_file_search"
          pattern: "{task_id}-plan.*"
          location: "docs/implementation-plan/"
          purpose: "Find implementation plan"
        - tool: "read_file"
          file: "located implementation plan"
          purpose: "Extract dev_notes for cross-reference"
          focus: ["dev_notes"]
          
      implementation_analysis:
        - tool: "codebase_search"
          query: "Where are the main implementation changes for this task?"
          purpose: "Identify implementation changes"
          parallelizable: true
        - tool: "grep"
          pattern: "{task_id}"
          output_mode: "files_with_matches"
          purpose: "Find task-related files"
          parallelizable: true
          
      quality_artifacts:
        - tool: "glob_file_search"
          pattern: "*test*"
          purpose: "Find test files and reports"
          parallelizable: true
        - tool: "grep"
          pattern: "coverage|CI|build"
          purpose: "Find quality metrics"
          parallelizable: true
    
    follow_up_mode:
      additional_actions:
        - "Read previous review document"
        - "Extract previous findings for tracking"
        - "Identify remediation scope and focus areas"
    
    validation_checkpoint:
      - "Review mode determined (initial/follow-up)"
      - "All spec files read"
      - "Implementation plan located"
      - "Implementation evidence gathered"
      - "Quality artifacts collected"
      - "Dev_notes read for cross-reference"

  stage_2:
    id: 2
    name: "範圍與合規性分析"
    name_en: "Scope & Conformance Analysis"
    objectives:
      - "Verify implementation matches planned scope"
      - "Check requirements conformance"
      - "Document any scope deviations"
    
    actions:
      scope_analysis:
        - tool: "codebase_search"
          query: "What functionality was actually implemented for this task?"
          purpose: "Analyze scope alignment"
          
      requirements_verification:
        - tool: "codebase_search"
          query: "How do the implemented changes meet the stated requirements?"
          purpose: "Verify requirements satisfaction"
        - cross_reference_analysis:
          dev_notes_verification:
            - action: "Compare dev_notes.detailed_changes against actual code changes"
              method: "Line-by-line diff analysis between documented and implemented changes"
              evidence_required: "File paths, line numbers, commit hashes"
            
            - action: "Verify F-IDs and N-IDs mapping accuracy"
              method: "Cross-reference functional/non-functional requirement IDs in dev_notes with actual implementation"
              evidence_required: "Requirement traceability matrix"
            
            - action: "Validate dev_notes quality metrics against measured results"
              method: "Compare documented performance/security/test metrics with actual measurements"
              evidence_required: "Test reports, performance benchmarks, security scan results"
            
            - action: "Check dev_notes deviations against observed implementation"
              method: "Verify documented scope deviations match actual implementation scope"
              evidence_required: "Scope comparison analysis with justification"
          
          consistency_validation:
            critical_checks:
              - "Developer claims vs actual implementation"
              - "Documented challenges vs code solutions"
              - "Claimed quality metrics vs measured results"
              - "Stated deviations vs implementation evidence"
            failure_escalation: "Inconsistencies treated as severe credibility issues requiring immediate investigation"
          
      deviation_assessment:
        tasks:
          - "Cross-reference scope vs implementation"
          - "Document scope violations with evidence"
          - "Assess deviation impact"
    
    follow_up_mode:
      additional_actions:
        - "Verify previous scope violations resolved"
        - "Check for new scope deviations"
    
    validation_checkpoint:
      - "Scope analysis completed"
      - "Requirements conformance checked"
      - "Dev_notes detailed_changes verified against actual code"
      - "F-IDs and N-IDs mapping accuracy confirmed"
      - "Quality metrics cross-validated (documented vs measured)"
      - "Developer claims consistency checked"
      - "Deviations documented with evidence"
      - "Impact assessment done"

  stage_3:
    id: 3
    name: "品質評估"
    name_en: "Quality Assessment"
    objectives:
      - "Evaluate implementation against 7-dimension quality framework"
      - "Score each dimension (1-5) with detailed justification"
      - "Gather quantitative metrics"
    
    quality_dimensions:
      code_quality:
        name: "Code Quality"
        actions:
          - tool: "codebase_search"
            query: "How readable and maintainable is the implemented code?"
          - tool: "grep"
            pattern: "error|exception|catch|handle"
            purpose: "Review error handling"
            
      security:
        name: "Security Review"
        actions:
          - tool: "codebase_search"
            query: "How are authentication and authorization handled in this implementation?"
          - tool: "grep"
            pattern: "password|secret|token|key|auth"
            purpose: "Find security-sensitive code"
            
      performance:
        name: "Performance Review"
        actions:
          - tool: "codebase_search"
            query: "What are the performance implications of this implementation?"
            
      testing:
        name: "Testing Review"
        actions:
          - tool: "glob_file_search"
            pattern: "*test*"
          - tool: "grep"
            pattern: "describe|it|test|spec"
            purpose: "Analyze test coverage"
            
      documentation:
        name: "Documentation Review"
        actions:
          - tool: "glob_file_search"
            pattern: "README*"
          - tool: "glob_file_search"
            pattern: "*doc*"
              
      maintainability:
        name: "Maintainability"
        evaluation_focus:
          - "Code structure and organization"
          - "Dependency management"
          - "Configuration management"
          
      deployment:
        name: "Deployment & Operations"
        evaluation_focus:
          - "Deployment process"
          - "Monitoring and logging"
          - "Production readiness"
    
    follow_up_mode:
      additional_actions:
        - "Compare current vs previous quality metrics"
        - "Calculate score deltas and identify trends"
        - "Verify previous quality issues resolved"
    
    validation_checkpoint:
      - "All 7 dimensions assessed with scores"
      - "Each score justified with evidence"
      - "Quantitative metrics collected"
      - "Trend analysis completed (for follow-up)"

  stage_4:
    id: 4
    name: "問題發現與建議"
    name_en: "Findings & Recommendations"
    objectives:
      - "Compile all identified issues"
      - "Rank findings by severity (blocker/high/medium/low)"
      - "Propose actionable recommendations with success criteria"
    
    finding_categories:
      - "Scope violations"
      - "Quality issues"
      - "Security concerns"
      - "Performance problems"
      - "Test gaps"
      - "Documentation issues"
    
    severity_levels:
      blocker:
        description: "Critical issues that prevent deployment"
        requires_immediate_action: true
      high:
        description: "Major issues that significantly impact functionality"
        requires_action_before_release: true
      medium:
        description: "Issues that should be addressed soon"
        can_be_scheduled: true
      low:
        description: "Minor improvements or suggestions"
        optional: true
    
    recommendation_structure:
      - "Specific remediation steps"
      - "Measurable success criteria"
      - "Priority and timeline"
      - "Resource requirements"
    
    follow_up_mode:
      additional_actions:
        - "Mark resolved findings"
        - "Update remaining findings status"
        - "Identify new findings"
        - "Track remediation progress"
    
    validation_checkpoint:
      - "All findings compiled and ranked"
      - "Recommendations are actionable"
      - "Success criteria defined"
      - "Evidence provided for each finding"

  stage_5:
    id: 5
    name: "報告生成與驗證"
    name_en: "Report Generation & Validation"
    objectives:
      - "Generate template-compliant review report"
      - "Validate document completeness"
      - "Handle task completion based on QA decision"
    
    report_generation:
      initial_review:
        tasks:
          - "Populate all template sections"
          - "Ensure no placeholder values remain"
          - "Include all evidence links"
          
      follow_up_review:
        tasks:
          - "Update existing document sections"
          - "Preserve metadata/context/appendix"
          - "Add trend analysis and remediation tracking"
          
      output_location: "{project_root}/docs/implementation-review/{task_id}-review.md"

    document_cleanup:
      actions:
        - tool: "edit_file"
          target: "{project_root}/docs/implementation-review/{task_id}-review.md"
          purpose: "移除驗證檢查清單段落（最終交付不包含內部檢查清單）"
          action_type: "remove_section_by_heading"
          headings:
            - "驗證檢查清單"
            - "審查檢查清單"
    
    qa_decision_handling:
      analysis_steps:
        - "Extract QA decision (pass/fail)"
        - "Identify blocking issues"
        - "Set internal variable: final_review_status"
        
      if_review_passes:
        actions:
          - "Set final_review_status to 'pass'"
          
      if_review_fails:
        actions:
          - "Set final_review_status to 'fail'"
    
    final_validation:
      checks:
        - tool: "read_file"
          target: "generated review document"
          validations:
            - "Compare against template structure"
            - "Verify no placeholders remain"
            - "Confirm evidence links valid"
            - "Validate markdown formatting"
    
    validation_checkpoint:
      - "Report generated and saved"
      - "Template compliance verified"
      - "QA decision extracted and status variable set"
      - "Final validation passed"
      - "Only after final validation passes may final_review_status be used by Stage 6"

  stage_6:
    id: 6
    name: "更新任務文件"
    name_en: "Update Task Document"
    depends_on: [5]
    objectives:
      - "根據最終審查狀態更新 task.md"
      - "確保任務狀態在中央文件中得到準確反映"
    
    actions:
      - tool: "edit_file"
        target: "docs/specs/task.md"
        purpose: "根據審查結果更新任務狀態"
        condition: "on_variable_value"
        variable_name: "final_review_status"
        
        on_value:
          pass:
            actions:
              - action_type: "search_and_replace"
                search_pattern: "- [ ] {task_title}"
                replace_pattern: "- [x] {task_title}"
                search_pattern_alt: "- [-] {task_title}"
                replace_pattern_alt: "- [x] {task_title}"
              - action_type: "search_and_replace"
                search_pattern: "- [ ] {task_id}."
                replace_pattern: "- [x] {task_id}."
              - action_type: "search_and_replace"
                search_pattern: "- [-] {task_id}."
                replace_pattern: "- [x] {task_id}."

          fail:
            action_type: "search_and_replace"
            search_pattern: "- [ ] {task_title}"
            replace_pattern: "- [-] {task_title}"

      - tool: "edit_file"
        target: "docs/specs/task.md"
        purpose: "更新任務中繼資料（狀態/文件/時間/審查者）"
        condition: "on_variable_value"
        variable_name: "final_review_status"
        on_value:
          pass:
            actions:
              - action_type: "search_and_replace"
                search_pattern: "QA狀態: .*"
                replace_pattern: "QA狀態: 通過"
              - action_type: "search_and_replace"
                search_pattern: "審查文件: .*"
                replace_pattern: "審查文件: {project_root}/docs/implementation-review/{task_id}-review.md"
              - action_type: "search_and_replace"
                search_pattern: "審查時間: .*"
                replace_pattern: "審查時間: {now_iso}"
              - action_type: "search_and_replace"
                search_pattern: "審查者: .*"
                replace_pattern: "審查者: task-reviewer"
              - action_type: "append_if_missing"
                anchor_heading: "## Metadata"
                content_lines:
                  - "## Metadata"
                  - "- QA狀態: 通過"
                  - "- 審查文件: {project_root}/docs/implementation-review/{task_id}-review.md"
                  - "- 審查時間: {now_iso}"
                  - "- 審查者: task-reviewer"
          fail:
            actions:
              - action_type: "search_and_replace"
                search_pattern: "QA狀態: .*"
                replace_pattern: "QA狀態: 失敗"
              - action_type: "search_and_replace"
                search_pattern: "審查文件: .*"
                replace_pattern: "審查文件: {project_root}/docs/implementation-review/{task_id}-review.md"
              - action_type: "search_and_replace"
                search_pattern: "審查時間: .*"
                replace_pattern: "審查時間: {now_iso}"
              - action_type: "search_and_replace"
                search_pattern: "審查者: .*"
                replace_pattern: "審查者: task-reviewer"
              - action_type: "append_if_missing"
                anchor_heading: "## Metadata"
                content_lines:
                  - "## Metadata"
                  - "- QA狀態: 失敗"
                  - "- 審查文件: {project_root}/docs/implementation-review/{task_id}-review.md"
                  - "- 審查時間: {now_iso}"
                  - "- 審查者: task-reviewer"

    validation_checkpoint:
      - "task.md 文件已根據審查結果更新"
      - "最終任務狀態已正確標記"
      - "通過時已同步勾選所有以 {task_id}. 開頭的子任務"

critical_success_factors:
  mandatory_requirements:
    evidence_based:
      description: "Every conclusion supported by concrete evidence"
      includes:
        - "File paths"
        - "PR links"
        - "Measurements"
        - "Code references"
        
    sequential_execution:
      description: "Complete stages in order, validate at each checkpoint"
      enforcement: "Stop immediately if validation fails"
      
    template_compliance:
      description: "Follow template structure exactly, populate all sections"
      validation_required: true
      
    no_placeholders:
      description: "Replace all placeholder values with actual content"
      validation_required: true
    deterministic_operation:
      description: "Operate with low-randomness settings for reproducibility"
      parameters:
        temperature: 0
        top_p: 0.1
      
    task_authority:
      description: "QA has final authority on task completion"
      authority_level: "final"

  error_handling:
    validation_failure_protocol:
      steps:
        - "STOP immediately"
        - "Identify specific failure"
        - "Return to appropriate stage"
        - "Re-execute with corrections"
        - "Re-validate before proceeding"

  quality_gates:
    requirements:
      - "All stages completed sequentially"
      - "All evidence collected and documented"
      - "All template sections populated"
      - "All validation checkpoints passed"
      - "Document ready for stakeholder review"
    
    success_criteria: "Comprehensive, evidence-based review report that enables informed decisions"

# Tool Integration Guidelines
tool_usage_patterns:
  file_operations:
    read_file: "Use for reading specific known files"
    glob_file_search: "Use for pattern-based file discovery"
    list_dir: "Use for directory exploration"
    
  code_analysis:
    codebase_search: "Use for semantic code understanding"
    grep: "Use for pattern matching and exact text search"
    
  documentation:
    write: "Use for generating final reports"
    search_replace: "Use for updating existing documents"

# AI Processing Notes
ai_optimization:
  structured_format: "YAML enables better parsing and validation"
  clear_hierarchy: "Nested structure maps to AI decision trees"
  tool_integration: "Explicit tool calls reduce AI confusion"
  validation_points: "Checkpoints enable early error detection"
  follow_up_support: "Separate handling for iterative reviews"
  deterministic_settings: "Use temperature=0, top_p=0.1 unless explicitly overridden by user"
  parallel_guidance: "Default to parallel tool execution for independent read-only steps"

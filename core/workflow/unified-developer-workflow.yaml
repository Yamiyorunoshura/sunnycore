---
# 統一開發者工作流程
# 整合了enforcement、validation和workflow為單一文件
template: unified-developer-workflow
version: 2.0

workflow:
  name: "統一開發者計劃驅動工作流程"
  description: "一個通用的開發者工作流程，通過agent prompt實現領域特化"
  enforcement_level: "strict"
  halt_on_validation_failure: true
  default_profile: "fast_strict"

# === 輸入定義 ===
inputs:
  task_id: "<required>"
  plan_path: "<auto>"
  project_root: "<auto>"
  developer_type: "<auto_detected_from_agent>"

# === 計劃解析配置 ===
plan_resolution:
  find_by_task_id: true
  search_paths:
    - "{{project_root}}/docs/implementation-plan"
  supported_extensions:
    - "yaml"
    - "yml" 
    - "md"
  expectations:
    template: "implementation-plan"
    version: 1

# === 範圍管控 ===
guardrails:
  scope_source: "scope"
  out_of_scope_is_blocking: true
  on_scope_violation: "pause_and_open_question"

# === 前置條件 ===
preconditions:
  - "計劃文件存在於docs/implementation-plan/*並匹配task_id"
  - "計劃範本版本 == 1"
  - "metadata包含task_id、project_name、owner、date"
  - "sources路徑解析"
  - "assumptions和constraints已確認"

# === 執行協議 ===
execution_protocol:
  
  enforcement_compliance:
    mandatory_enforcement_files:
      backend: "~/Coding/AI workflow/core/enforcement/backend-developer-enforcement.md"
      frontend: "~/Coding/AI workflow/core/enforcement/frontend-developer-enforcement.md"
      fullstack: "~/Coding/AI workflow/core/enforcement/fullstack-developer-enforcement.md"
      refactor: "~/Coding/AI workflow/core/enforcement/refactor-developer-enforcement.md"
    note: "All detailed enforcement rules, validation criteria, and execution requirements are defined in the respective enforcement files"

profiles:
  fast_strict:
    sampling_policy:
      temperature: 0.1
      top_p: 0.2
      json_mode: true
      max_output_tokens: 4096
    response_format:
      default: "json"
      canonical_key_order: true
      forbid_extra_keys: true
      wrap_in_code_fence: false
    caching:
      plan_cache_key: ["task_id", "plan_hash"]
      cache_context_summary: true
      restore_on_same_key: true
    generation_style:
      no_prose: true
      bullet_only: true
      allowed_terms_enum: ["F-ID", "N-ID", "UI-ID", "acceptance_criteria", "risk", "decision"]
    parallelizable_actions:
      - stage: "tests_first"
        actions: ["unit_tests_skeletons", "integration_tests_skeletons", "acceptance_tests_skeletons"]
      - stage: "quality_gates"
        actions: ["static_analysis", "dependency_security_scan"]
    differential_mode:
      enabled_when: "brownfield"
      only_generate_changed_sections: true

output_contracts:
  dev_notes: { $ref: "#/schemas/dev_notes_v1" }
  objectives: { $ref: "#/schemas/objectives_v1" }
  modules: { $ref: "#/schemas/modules_v1" }

schemas:
  dev_notes_v1:
    $id: "schemas/dev_notes_v1"
    type: object
    required: [developer_type, timestamp, changes_summary, detailed_changes_mapped_to, implementation_decisions, risk_considerations, maintenance_notes]
    properties:
      developer_type:
        enum: ["backend", "frontend", "fullstack", "refactor"]
      timestamp:
        type: string
        format: date-time
      task_phase:
        type: string
      re_dev_iteration:
        type: integer
        minimum: 1
      changes_summary:
        type: string
        minLength: 50
      detailed_changes_mapped_to:
        type: object
        required: ["F-IDs", "N-IDs"]
        properties:
          F-IDs:
            type: array
            items:
              type: string
              pattern: "^F-[0-9]+$"
            minItems: 1
          N-IDs:
            type: array
            items:
              type: string
              pattern: "^N-[0-9]+$"
          UI-IDs:
            type: array
            items:
              type: string
              pattern: "^UI-[0-9]+$"
        additionalProperties: false
      implementation_decisions:
        type: string
        minLength: 50
      risk_considerations:
        type: string
        minLength: 30
      maintenance_notes:
        type: string
        minLength: 30
    additionalProperties: false

  objectives_v1:
    $id: "schemas/objectives_v1"
    type: object
    required: ["F-IDs", "N-IDs", "acceptance_criteria"]
    properties:
      F-IDs:
        type: array
        items:
          type: string
          pattern: "^F-[0-9]+$"
        minItems: 1
      N-IDs:
        type: array
        items:
          type: string
          pattern: "^N-[0-9]+$"
      acceptance_criteria:
        type: array
        items:
          type: object
          required: ["F-ID", "criteria"]
          properties:
            F-ID:
              type: string
              pattern: "^F-[0-9]+$"
            criteria:
              type: array
              items:
                type: string
        minItems: 1
    additionalProperties: false

  modules_v1:
    $id: "schemas/modules_v1"
    type: object
    required: ["modules"]
    properties:
      modules:
        type: array
        items:
          type: object
          required: ["name", "interfaces"]
          properties:
            name:
              type: string
            interfaces:
              type: array
              items:
                type: object
                required: ["name", "methods"]
                properties:
                  name:
                    type: string
                  methods:
                    type: array
                    items:
                      type: object
                      required: ["name", "inputs", "outputs"]
                      properties:
                        name: { type: string }
                        inputs:
                          type: array
                          items:
                            type: object
                        outputs:
                          type: object
            reuse:
              type: array
              items:
                type: string
    additionalProperties: false

# === 階段定義 ===
# 詳細的驗證規則和品質標準在對應的 enforcement 文件中定義
validation_rules:
  note: "Detailed validation rules and quality standards are defined in the respective enforcement files"
  
  stage_sequence:
    - workflow_initialization
    - scope_comprehension
    - objectives_and_acceptance
    - architecture_and_modules
    - tests_first
    - implementation
    - quality_gates
    - milestones_timeline
    - dependencies
    - estimation_tracking
    - risks_changes
    - handover_docs
    - definition_of_done

  error_handling:
    validation_errors:
      missing_stage:
        severity: "blocker"
        message: "Mandatory stage not completed"
        action: "halt_and_request_completion"
      
      scope_violation:
        severity: "blocker"
        message: "Implementation outside of defined scope"
        action: "pause_and_open_question"
      
      missing_tests:
        severity: "blocker"
        message: "Tests not written before implementation"
        action: "request_test_creation_first"

  format_contracts:
    - stage: "objectives_and_acceptance"
      must_validate_against: "objectives"
      on_failure: "halt_and_request_completion"
    - stage: "architecture_and_modules"
      must_validate_against: "modules"
      on_failure: "halt_and_request_completion"
    - stage: "handover_docs"
      must_validate_against: "dev_notes"
      on_failure: "HALT_TASK_AND_RETURN_TO_HANDOVER_docs"

# === 工作流程階段 ===
stages:
  - id: "workflow_initialization"
    title: "工作流程初始化"
    mandatory: true
    validation_checkpoint: true
    actions:
      - load: ["~/Coding/AI workflow/core/workflow/unified-developer-workflow.yaml"]
      - detect_developer_type_from_agent: true
      - resolve_plan_by_task_id: true
      - verify_preconditions: true
  - id: "scope_comprehension"
    title: "範圍理解"
    mandatory: true
    validation_checkpoint: true
    actions:
      - read: ["context.summary", "context.background", "context.goals"]
      - copy_to_notes: ["context.goals"]
      - review: ["scope.in_scope", "scope.out_of_scope"]
      - review_existing_dev_notes:
          - read_previous_dev_entries: true
          - understand_historical_changes: true
          - identify_related_patterns_and_decisions: true
          - note_potential_conflicts_with_current_scope: true

  - id: "objectives_and_acceptance"
    title: "目標與驗收"
    mandatory: true
    validation_checkpoint: true
    actions:
      - extract_functional_objectives_as: "F-IDs"
      - extract_non_functional_objectives_as: "N-IDs"
      - attach_acceptance_criteria: true

  - id: "architecture_and_modules"
    title: "架構與模組"
    mandatory: true
    validation_checkpoint: true
    actions:
      - read: ["approach.architecture_overview"]
      - for_each: "approach.modules"
        do:
          - define_first: "interfaces"
          - identify: "reuse"
          - create: "module_skeletons_with_feature_flags"

  - id: "tests_first"
    title: "測試優先"
    mandatory: true
    validation_checkpoint: true
    actions:
      - unit_tests_per_module_aligned_to: "F-IDs"
      - integration_tests_for: ["interfaces", "routing", "api_flows", "failure_paths"]
      - acceptance_tests_mirroring: "acceptance_criteria_per_F-ID"

  - id: "implementation"
    title: "實作"
    mandatory: true
    validation_checkpoint: true
    actions:
      - implement_handlers_and_components_per: ["interfaces", "F-IDs"]
      - enforce_constraints: true
      - traceability:
          reference_task_id: "metadata.task_id"
          in: ["PR_titles", "commits", "code_annotations"]

  - id: "quality_gates"
    title: "品質門檻"
    mandatory: true
    validation_checkpoint: true
    actions:
      - ensure: "coverage_and_static_analysis_thresholds >= quality_gates"
      - validate_non_functional: "N-IDs_measurements"
      - security_checks: ["dependencies", "SAST"]

  - id: "milestones_timeline"
    title: "里程碑與時程"
    mandatory: true
    validation_checkpoint: true
    actions:
      - map_dev_tasks_to: "milestones.schedule"
      - mark_done_when: "milestones.done_definition_satisfied"

  - id: "dependencies"
    title: "依賴項"
    mandatory: true
    validation_checkpoint: true
    actions:
      - verify_versions_and_SLAs: "dependencies.external"
      - coordinate_internal_owners: "dependencies.internal"

  - id: "estimation_tracking"
    title: "估算與追蹤"
    mandatory: true
    validation_checkpoint: true
    actions:
      - report_progress_using: "estimation.method"
      - keep_remaining_effort_per_work_item: true
      - update_confidence_against: "estimation.summary.confidence"

  - id: "risks_changes"
    title: "風險與變更"
    mandatory: true
    validation_checkpoint: true
    actions:
      - review_weekly: "risks"
      - on_realized_risk: ["execute_mitigation", "then_contingency"]
      - on_scope_creep: "open_question_and_pause"

  - id: "handover_docs"
    title: "交接與文件"
    mandatory: true
    validation_checkpoint: true
    🚨_CRITICAL_STAGE: "DEV_NOTES_MUST_BE_COMPLETED"
    actions:
      - update_documentation_per_developer_type: true
      - fill_notes_with: "deviations_and_clarifications"
      - 🚨_MANDATORY_DEV_NOTES_VALIDATION:
          pre_validation_checks:
            - verify_dev_notes_section_exists: "HALT_IF_MISSING"
            - verify_detailed_changes_not_empty: "HALT_IF_EMPTY"
            - verify_f_ids_n_ids_mapping_complete: "HALT_IF_INCOMPLETE"
            - verify_ui_ids_mapping_complete_for_frontend_fullstack: "HALT_IF_INCOMPLETE"
          quality_requirements:
            - detailed_changes_minimum_length: "300_characters"
            - must_include_implementation_decisions: true
            - must_include_risk_considerations: true
            - must_include_maintenance_notes: true
          enforcement:
            - on_validation_failure: "HALT_TASK_AND_NOTIFY_USER"
            - require_explicit_confirmation: "DEV_NOTES_COMPLETED_AND_VERIFIED"
      - append_new_dev_notes_entry:
          mode: "preserve_existing_entries"
          new_entry:
            - developer_type: "determined_from_agent"
            - timestamp: "current_datetime"
            - task_phase: "determined_from_task_state"
            - re_dev_iteration: "current_re_dev_iteration_number_or_1"
            - changes_summary: "overall_development_work_summary"
            - detailed_changes_mapped_to: "F-IDs_and_N-IDs"
            - challenges_and_deviations: "documented_issues_and_plan_changes"
            - quality_metrics_achieved: "actual_vs_target_measurements"
            - implementation_decisions: "technical_choices_and_rationale"
            - risk_considerations: "identified_risks_and_mitigation"
            - maintenance_notes: "future_maintenance_requirements_and_considerations"

  - id: "definition_of_done"
    title: "完成定義"
    mandatory: true
    validation_checkpoint: true
    actions:
      - require: [
          "all_F-IDs_pass_acceptance_tests",
          "all_N-IDs_verified_by_measurement",
          "no_unresolved_open_questions",
          "PRs_merged_CI_green",
          "🚨_dev_notes_completely_filled_and_verified",
          "🚨_detailed_changes_mapped_to_all_relevant_F-IDs_N-IDs_UI-IDs",
          "🚨_handover_docs_stage_fully_completed"
        ]
      - 🚨_FINAL_DEV_NOTES_VERIFICATION:
          critical_checks:
            - dev_notes_section_exists: "MANDATORY"
            - detailed_changes_field_populated: "MANDATORY" 
            - f_ids_n_ids_mapping_complete: "MANDATORY"
            - ui_ids_mapping_complete_for_frontend_fullstack: "MANDATORY"
            - implementation_decisions_documented: "MANDATORY"
            - risk_considerations_documented: "MANDATORY"
            - maintenance_notes_provided: "MANDATORY"
          validation_failure_action: "HALT_TASK_COMPLETION_AND_RETURN_TO_HANDOVER_docs"

# === 開發者類型特化配置 ===
developer_specializations:
  
  backend:
    specialized_actions:
      data_changes:
        - draft_idempotent_reversible_migrations
        - define_ordered_steps_and_backout
        - run_in_non_prod_first
      
      api_security:
        - implement_authentication_authorization
        - validate_input_sanitization
        - ensure_proper_error_handling
      
      performance:
        - meet_latency_throughput_memory_targets
        - implement_proper_logging_monitoring
    
    documentation_requirements:
      - update_api_docs_per_interfaces
      - document_migrations_and_rollback

  frontend:
    specialized_actions:
      ux_requirements:
        - extract_ui_objectives_as: "UI-IDs"
        - map_acceptance_criteria_to: "UI-IDs"
        - check_design_assets_from: "metadata.sources.design"
      
      routing_and_states:
        - define_routes_from_modules
        - enumerate_app_states_per_page
        - identify_global_state_and_providers
      
      components_and_contracts:
        - create_component_skeletons_with_props
        - define_types_and_interfaces_first
        - identify_reused_components
      
      styling_and_theming:
        - apply_design_tokens_if_available
        - ensure_accessibility_basics: ["color_contrast", "focus", "aria_labels"]
    
    documentation_requirements:
      - update_storybook_or_docs_for_components

  fullstack:
    specialized_actions:
      - includes_backend_specializations: true
      - includes_frontend_specializations: true
      - wire_frontend_to_backend_flows: true
    
    documentation_requirements:
      - update_api_docs_per_interfaces
      - update_storybook_or_docs_for_components

  refactor:
    specialized_actions:
      baseline_capture:
        - run_full_test_suite_and_record_results
        - capture_public_APIs_and_contracts
        - trace_critical_paths_and_side_effects
        - measure_non_functional_baselines
      
      characterization_tests:
        - create_tests_for_existing_behavior
        - assert_invariants_and_contracts
      
      incremental_refactor:
        - small_steps_atomic_commits
        - keep_green_throughout
        - migrate_APIs_or_components_with_adapters
      
      verification:
        - compare_non_functional_to_baseline
        - ensure_no_api_breaks

# === 關鍵成功因素 ===
critical_success_factors:
  - "Read workflow and plan files FIRST - never start without them"
  - "Stay within scope boundaries - pause on any scope questions"
  - "Extract objectives as F-IDs and N-IDs - maintain traceability"
  - "Define interfaces and architecture first - follow plan structure"
  - "Write tests before implementation - aligned to acceptance criteria"
  - "Maintain traceability - task_id in PRs, commits, code"
  - "Meet quality gates - coverage, static analysis, performance"
  - "Follow milestones and timeline - track progress accurately"
  - "Manage risks and dependencies - coordinate with owners"
  - "Complete definition of done - all criteria must be satisfied"

# === 工作流程違規回應 ===
workflow_violation_responses:
  - "Missing stage execution: Return and complete the skipped stage"
  - "Scope violation: Pause immediately and open question"
  - "Plan deviation: Document and get approval for changes"
  - "Missing tests: Implement required tests before proceeding"
  - "Quality gate failure: Address issues before marking done"
  - "Incomplete documentation: Update all required documentation"
  - "Missing traceability: Add task_id references to PRs/commits"
  - "🚨 DEV_NOTES_INCOMPLETE: Immediately halt and return to handover_docs stage"
  - "🚨 DEV_NOTES_MISSING_F-IDs_MAPPING: Stop task completion and require complete mapping"
  - "🚨 DEV_NOTES_INSUFFICIENT_DETAIL: Reject completion and require detailed documentation"
  - "🚨 HANDOVER_docs_STAGE_SKIPPED: Block definition_of_done until handover_docs completed"

---
# Fullstack Developer 工作流程
# 專為全端開發者設計的計劃驅動工作流程
template: fullstack-developer-workflow
version: 2.0

workflow:
  name: "Fullstack Developer 計劃驅動工作流程"
  description: "專為全端開發者設計的工作流程，專注於端到端應用程式、前後端整合和架構設計"
  enforcement_level: "lenient"
  halt_on_validation_failure: false
  default_profile: "fast_strict"

# === 輸入定義 ===
inputs:
  task_id: "<required>"
  plan_path: "<auto>"
  project_root: "<auto>"
  developer_type: "fullstack"

# === 計劃解析配置 ===
plan_resolution:
  find_by_task_id: true
  search_paths:
    - "{{project_root}}/docs/implementation-plan"
  supported_extensions:
    - "yaml"
    - "yml" 
    - "md"
  expectations:
    template: "implementation-plan"
    version: 1

# === 範圍管控 ===
guardrails:
  scope_source: "scope"
  out_of_scope_is_blocking: false
  on_scope_violation: "record_warning_and_continue"

# === 前置條件 ===
preconditions:
  - "計劃文件存在於docs/implementation-plan/*並匹配task_id"
  - "計劃範本版本 == 1"
  - "metadata包含task_id、project_name、owner、date"
  - "sources路徑解析"
  - "assumptions和constraints已確認"

# === 執行協議 ===
execution_protocol:
  
  enforcement_compliance:
    mandatory_enforcement_file: "/Users/tszkinlai/Coding/AI workflow/core/dev/enforcement/fullstack-developer-enforcement.md"
    note: "All detailed enforcement rules, validation criteria, and execution requirements are defined in the fullstack enforcement file"

# 配置繼承自統一確定性設定
# 詳細配置請參考: /Users/tszkinlai/Coding/AI workflow/core/dev/config/deterministic-settings.yaml

output_contracts:
  dev_notes: { $ref: "#/schemas/dev_notes_v1" }
  objectives: { $ref: "#/schemas/objectives_v1" }
  modules: { $ref: "#/schemas/modules_v1" }

schemas:
  dev_notes_v1:
    $id: "schemas/dev_notes_v1"
    type: object
    required: [developer_type, timestamp, changes_summary, detailed_changes_mapped_to, implementation_decisions, risk_considerations, maintenance_notes]
    properties:
      developer_type:
        enum: ["fullstack"]
      timestamp:
        type: string
        format: date-time
      task_phase:
        type: string
      re_dev_iteration:
        type: integer
        minimum: 1
      changes_summary:
        type: string
        minLength: 50
      detailed_changes_mapped_to:
        type: object
        required: ["F-IDs", "N-IDs", "UI-IDs"]
        properties:
          F-IDs:
            type: array
            items:
              type: string
              pattern: "^F-[0-9]+$"
            minItems: 1
          N-IDs:
            type: array
            items:
              type: string
              pattern: "^N-[0-9]+$"
          UI-IDs:
            type: array
            items:
              type: string
              pattern: "^UI-[0-9]+$"
        additionalProperties: false
      implementation_decisions:
        type: string
        minLength: 50
      risk_considerations:
        type: string
        minLength: 30
      maintenance_notes:
        type: string
        minLength: 30
      challenges_and_deviations:
        type: string
        minLength: 30
      quality_metrics_achieved:
        type: string
        minLength: 20
      validation_warnings:
        type: array
        items:
          type: string
    additionalProperties: false

  objectives_v1:
    $id: "schemas/objectives_v1"
    type: object
    required: ["F-IDs", "N-IDs", "UI-IDs", "acceptance_criteria"]
    properties:
      F-IDs:
        type: array
        items:
          type: string
          pattern: "^F-[0-9]+$"
        minItems: 1
      N-IDs:
        type: array
        items:
          type: string
          pattern: "^N-[0-9]+$"
      UI-IDs:
        type: array
        items:
          type: string
          pattern: "^UI-[0-9]+$"
      acceptance_criteria:
        type: array
        items:
          type: object
          required: ["F-ID", "criteria"]
          properties:
            F-ID:
              type: string
              pattern: "^F-[0-9]+$"
            criteria:
              type: array
              items:
                type: string
        minItems: 1
    additionalProperties: false

  modules_v1:
    $id: "schemas/modules_v1"
    type: object
    required: ["modules"]
    properties:
      modules:
        type: array
        items:
          type: object
          required: ["name", "interfaces"]
          properties:
            name:
              type: string
            interfaces:
              type: array
              items:
                type: object
                required: ["name", "methods"]
                properties:
                  name:
                    type: string
                  methods:
                    type: array
                    items:
                      type: object
                      required: ["name", "inputs", "outputs"]
                      properties:
                        name: { type: string }
                        inputs:
                          type: array
                          items:
                            type: object
                        outputs:
                          type: object
            reuse:
              type: array
              items:
                type: string
    additionalProperties: false

# === 階段定義 ===
# 詳細的驗證規則和品質標準在fullstack enforcement文件中定義
validation_rules:
  note: "Detailed validation rules and quality standards are defined in the fullstack enforcement file"
  
  stage_sequence:
    - workflow_initialization
    - scope_comprehension
    - objectives_and_acceptance
    - architecture_and_modules
    - tdd_cycle_planning
    - tests_first
    - implementation
    - quality_gates
    - milestones_timeline
    - dependencies
    - estimation_tracking
    - risks_changes
    - handover_docs
    - definition_of_done

  error_handling:
    validation_errors:
      missing_stage:
        severity: "warning"
        message: "Mandatory stage not completed"
        action: "append_warning_and_continue"
      
      scope_violation:
        severity: "warning"
        message: "Implementation outside of defined scope"
        action: "append_warning_and_continue"
      
      missing_tests:
        severity: "warning"
        message: "Tests not written before implementation"
        action: "append_warning_and_continue"
      
      tdd_violation:
        severity: "warning"
        message: "TDD cycle not followed - tests should be written first"
        action: "append_warning_and_continue"

  format_contracts:
    - stage: "objectives_and_acceptance"
      must_validate_against: "objectives"
      on_failure: "append_warning_and_continue"
    - stage: "architecture_and_modules"
      must_validate_against: "modules"
      on_failure: "append_warning_and_continue"
    - stage: "handover_docs"
      must_validate_against: "dev_notes"
      on_failure: "APPEND_WARNINGS_AND_CONTINUE"
    - stage: "tdd_cycle_planning"
      must_validate_against: "tdd_plan"
      on_failure: "append_warning_and_continue"

# === 工作流程階段 ===
stages:
  - id: "workflow_initialization"
    title: "工作流程初始化"
    mandatory: true
    validation_checkpoint: true
    actions:
      - load: ["/Users/tszkinlai/Coding/AI workflow/core/dev/workflow/fullstack-developer-workflow.yaml"]
      - detect_developer_type: "fullstack"
      - resolve_plan_by_task_id: true
      - verify_preconditions: true

  - id: "scope_comprehension"
    title: "範圍理解"
    mandatory: true
    validation_checkpoint: true
    actions:
      - read: ["context.summary", "context.background", "context.goals"]
      - copy_to_notes: ["context.goals"]
      - review: ["scope.in_scope", "scope.out_of_scope"]
      - check_for_existing_implementation:
          - scan_codebase_for_related_changes: true
          - identify_existing_patterns_and_dependencies: true
          - understand_current_implementation_state: true
          - note_potential_conflicts_with_current_scope: true

  - id: "objectives_and_acceptance"
    title: "目標與驗收"
    mandatory: true
    validation_checkpoint: true
    actions:
      - extract_functional_objectives_as: "F-IDs"
      - extract_non_functional_objectives_as: "N-IDs"
      - extract_ui_objectives_as: "UI-IDs"
      - map_acceptance_criteria_to: ["F-IDs", "UI-IDs"]
      - check_design_assets_from: "metadata.sources.design"

  - id: "architecture_and_modules"
    title: "架構與模組"
    mandatory: true
    validation_checkpoint: true
    actions:
      - read: ["approach.architecture_overview"]
      - for_each: "approach.modules"
        do:
          - define_first: "interfaces"
          - identify: "reuse"
          - create: "module_skeletons_with_feature_flags"
      # Frontend specific (繼承自前端工作流程)
      - inherit_frontend_actions: "frontend-developer-workflow.yaml"

  - id: "tdd_cycle_planning"
    title: "TDD循環規劃"
    mandatory: true
    validation_checkpoint: true
    actions:
      - plan_tdd_cycles_per: ["F-IDs", "UI-IDs"]
      - define_test_scenarios_for_each: "acceptance_criteria"
      - plan_frontend_backend_integration_tests: true
      - plan_end_to_end_testing_strategy: true
      - identify_test_data_and_mock_requirements: true
      - define_test_environment_setup: true
      - create_tdd_iteration_plan: true
      - coordinate_testing_across_layers: true

  - id: "tests_first"
    title: "測試優先 (TDD紅階段)"
    mandatory: true
    validation_checkpoint: true
    actions:
      - 🚨_TDD_MANDATORY: "WRITE_TESTS_BEFORE_IMPLEMENTATION"
      - unit_tests_per_module_aligned_to: "F-IDs"
      - integration_tests_for: ["interfaces", "routing", "api_flows", "failure_paths"]
      - acceptance_tests_mirroring: "acceptance_criteria_per_F-ID"
      - contract_tests_for: ["api_contracts", "frontend_backend_integration"]
      - e2e_tests_for: ["complete_user_flows", "cross_browser_compatibility"]
      - ensure_tests_fail_initially: "RED_PHASE_OF_TDD"
      - create_test_skeletons_for_all_layers: true
      - document_test_behavior_expectations: true
      - create_test_data_fixtures: true

  - id: "implementation"
    title: "實作 (TDD綠階段)"
    mandatory: true
    validation_checkpoint: true
    actions:
      - 🚨_TDD_ENFORCEMENT: "IMPLEMENT_MINIMAL_CODE_TO_PASS_TESTS"
      - implement_handlers_and_components_per: ["interfaces", "F-IDs", "UI-IDs"]
      # Backend specific (繼承自後端工作流程)
      - inherit_backend_actions: "backend-developer-workflow.yaml"
      # Frontend specific (繼承自前端工作流程)
      - inherit_frontend_actions: "frontend-developer-workflow.yaml"
      # Fullstack specific
      - wire_frontend_to_backend_flows: true
      - ensure_contract_alignment: true
      - implement_end_to_end_data_flow: true
      - run_tests_after_each_change: "KEEP_TESTS_GREEN"
      - enforce_constraints: true
      - traceability:
          reference_task_id: "metadata.task_id"
          in: ["PR_titles", "commits", "code_annotations"]

  - id: "quality_gates"
    title: "品質門檻 (TDD重構階段)"
    mandatory: true
    validation_checkpoint: true
    actions:
      - 🚨_TDD_REFACTOR: "REFACTOR_WHILE_KEEPING_TESTS_GREEN"
      - ensure: "coverage_and_static_analysis_thresholds >= quality_gates"
      - validate_non_functional: "N-IDs_measurements"
      - security_checks: ["dependencies", "SAST", "api_security_audit"]
      - accessibility_audit: ["WCAG_compliance", "screen_reader_testing"]
      - performance_audit: ["LCP", "INP", "TTI", "bundle_size", "api_latency"]
      - integration_testing: ["frontend_backend_integration", "end_to_end_flows"]
      - refactor_code_while_maintaining_behavior: true
      - improve_architecture_across_layers: true
      - eliminate_duplication_across_frontend_backend: true
      - optimize_performance_without_breaking_tests: true

  - id: "milestones_timeline"
    title: "里程碑與時程"
    mandatory: true
    validation_checkpoint: true
    actions:
      - map_dev_tasks_to: "milestones.schedule"
      - mark_done_when: "milestones.done_definition_satisfied"

  - id: "dependencies"
    title: "依賴項"
    mandatory: true
    validation_checkpoint: true
    actions:
      - verify_versions_and_SLAs: "dependencies.external"
      - coordinate_internal_owners: "dependencies.internal"

  - id: "estimation_tracking"
    title: "估算與追蹤"
    mandatory: true
    validation_checkpoint: true
    actions:
      - report_progress_using: "estimation.method"
      - keep_remaining_effort_per_work_item: true
      - update_confidence_against: "estimation.summary.confidence"

  - id: "risks_changes"
    title: "風險與變更"
    mandatory: true
    validation_checkpoint: true
    actions:
      - review_weekly: "risks"
      - on_realized_risk: ["execute_mitigation", "then_contingency"]
      - on_scope_creep: "open_question_and_pause"

  - id: "handover_docs"
    title: "交接與文件"
    mandatory: true
    validation_checkpoint: true
    🚨_CRITICAL_STAGE: "DEV_NOTES_MUST_BE_COMPLETED"
    actions:
      - update_documentation_per_developer_type: "fullstack"
      - update_api_docs_per_interfaces: true
      - update_storybook_or_docs_for_components: true
      - document_migrations_and_rollback: true
      - fill_notes_with: "deviations_and_clarifications"
      - 🚨_MANDATORY_DEV_NOTES_VALIDATION:
          pre_validation_checks:
            - verify_dev_notes_section_exists: "WARN_AND_CONTINUE"
            - verify_detailed_changes_not_empty: "WARN_AND_CONTINUE"
            - verify_f_ids_n_ids_ui_ids_mapping_complete: "WARN_AND_CONTINUE"
          quality_requirements:
            - detailed_changes_minimum_length: "300_characters"
            - must_include_implementation_decisions: true
            - must_include_risk_considerations: true
            - must_include_maintenance_notes: true
          enforcement:
            - on_validation_failure: "APPEND_WARNINGS_AND_CONTINUE"
            - require_explicit_confirmation: "DEV_NOTES_COMPLETED_AND_VERIFIED"
      - write_dev_notes_file:
          location: "{{project_root}}/docs/dev-notes/{{task_id}}-dev-notes.md"
          mode: "append_or_create"
          content_structure:
            - developer_type: "fullstack"
            - timestamp: "current_datetime"
            - task_phase: "determined_from_task_state"
            - re_dev_iteration: "current_re_dev_iteration_number_or_1"
            - changes_summary: "overall_development_work_summary"
            - detailed_changes_mapped_to: "F-IDs_N-IDs_and_UI-IDs"
            - challenges_and_deviations: "documented_issues_and_plan_changes"
            - quality_metrics_achieved: "actual_vs_target_measurements"
            - implementation_decisions: "technical_choices_and_rationale"
            - risk_considerations: "identified_risks_and_mitigation"
            - maintenance_notes: "future_maintenance_requirements_and_considerations"
            - validation_warnings: "collected_validation_warnings"

  - id: "definition_of_done"
    title: "完成定義"
    mandatory: true
    validation_checkpoint: true
    actions:
      - require: [
          "all_F-IDs_pass_acceptance_tests",
          "all_N-IDs_verified_by_measurement",
          "all_UI-IDs_verified_by_user_testing",
          "frontend_backend_integration_verified",
          "no_unresolved_open_questions",
          "PRs_merged_CI_green",
          "🚨_dev_notes_completely_filled_and_verified",
          "🚨_detailed_changes_mapped_to_all_relevant_F-IDs_N-IDs_UI-IDs",
          "🚨_handover_docs_stage_fully_completed"
        ]
      - 🚨_FINAL_DEV_NOTES_VERIFICATION:
          critical_checks:
            - dev_notes_section_exists: "MANDATORY"
            - detailed_changes_field_populated: "MANDATORY" 
            - f_ids_n_ids_ui_ids_mapping_complete: "MANDATORY"
            - implementation_decisions_documented: "MANDATORY"
            - risk_considerations_documented: "MANDATORY"
            - maintenance_notes_provided: "MANDATORY"
          validation_failure_action: "APPEND_WARNINGS_AND_CONTINUE"

# === Fullstack開發者特化配置 ===
# 本工作流程專注於全端特有的整合邏輯
# 前端和後端專門化內容分別繼承自對應工作流程
fullstack_specializations:
  # 後端專門化繼承自後端開發者工作流程
  # 詳細內容請參考: /Users/tszkinlai/Coding/AI workflow/core/dev/workflow/backend-developer-workflow.yaml

  # 前端專門化繼承自前端開發者工作流程
  # 詳細內容請參考: /Users/tszkinlai/Coding/AI workflow/core/dev/workflow/frontend-developer-workflow.yaml

  # 全端特有的整合邏輯（保留）
  fullstack_specific:
    - wire_frontend_to_backend_flows: true
    - ensure_contract_alignment: true
    - implement_end_to_end_data_flow: true
    - coordinate_frontend_backend_deployment: true
    - manage_cross_layer_dependencies: true
    - ensure_consistent_tech_stack: true

  documentation_requirements:
    # 文檔要求繼承自各自專門化工作流程
    - inherit_documentation_requirements: ["frontend-developer-workflow.yaml", "backend-developer-workflow.yaml"]
    # 全端特有的文檔要求
    - document_integration_points: true
    - document_cross_layer_architecture: true
    - document_deployment_coordination: true

# === 關鍵成功因素 ===
critical_success_factors:
  - "Read workflow and plan files FIRST - never start without them"
  - "Stay within scope boundaries - pause on any scope questions"
  - "Extract objectives as F-IDs, N-IDs, and UI-IDs - maintain traceability"
  - "🚨 TDD MANDATORY: Write tests BEFORE implementation - RED phase first"
  - "🚨 TDD ENFORCEMENT: Implement minimal code to pass tests - GREEN phase"
  - "🚨 TDD REFACTOR: Refactor while keeping tests green - REFACTOR phase"
  - "Define interfaces and architecture first - follow plan structure"
  - "Maintain traceability - task_id in PRs, commits, code"
  - "Meet quality gates - coverage, static analysis, performance, accessibility, security"
  - "Follow milestones and timeline - track progress accurately"
  - "Manage risks and dependencies - coordinate with owners"
  - "Complete definition of done - all criteria must be satisfied"
  - "Coordinate frontend and backend development - ensure consistency"
  - "Manage cross-layer dependencies - prevent integration issues"
  - "Maintain consistent tech stack across layers - avoid conflicts"
  - "NEVER skip TDD cycle - tests must be written first"
  - "Keep tests green throughout implementation - TDD safety principle"
  - "Test integration points between layers - fullstack TDD requirements"

# === 工作流程違規回應 ===
workflow_violation_responses:
  - "Missing stage execution: Append warning and continue; flag in dev_notes.validation_warnings"
  - "Scope violation: Append warning and continue; open question asynchronously"
  - "Plan deviation: Append warning; document decision in dev_notes"
  - "🚨 TDD VIOLATION: CRITICAL WARNING - tests must be written before implementation"
  - "Missing tests: Append warning; prioritize remediation next iteration"
  - "Quality gate failure: Append warning; include measurements and remediation plan"
  - "Incomplete documentation: Append warning; complete before release cut if possible"
  - "Missing traceability: Append warning; add task_id references retroactively"
  - "🚨 DEV_NOTES_INCOMPLETE: Append warning and continue to DoD with risk note"
  - "🚨 DEV_NOTES_MISSING_F-IDs_N-IDs_UI-IDs_MAPPING: Append warning; include provisional mapping or rationale"
  - "🚨 DEV_NOTES_INSUFFICIENT_DETAIL: Append warning; add details in follow-up commit"
  - "🚨 HANDOVER_docs_STAGE_SKIPPED: Append warning; ensure documentation post-hoc"
  - "🚨 TDD CYCLE INCOMPLETE: Append warning; ensure RED-GREEN-REFACTOR cycle completed"

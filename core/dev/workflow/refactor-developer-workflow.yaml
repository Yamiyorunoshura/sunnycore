---
# Refactor Developer 工作流程
# 專為重構開發者設計的計劃驅動工作流程
template: refactor-developer-workflow
version: 2.0

workflow:
  name: "Refactor Developer 計劃驅動工作流程"
  description: "專為重構開發者設計的工作流程，專注於程式碼重構、架構改善和保持行為不變"
  enforcement_level: "lenient"
  halt_on_validation_failure: false
  default_profile: "fast_strict"

# === 輸入定義 ===
inputs:
  task_id: "<required>"
  plan_path: "<auto>"
  project_root: "<auto>"
  developer_type: "refactor"

# === 計劃解析配置 ===
plan_resolution:
  find_by_task_id: true
  search_paths:
    - "{{project_root}}/docs/implementation-plan"
  supported_extensions:
    - "yaml"
    - "yml" 
    - "md"
  expectations:
    template: "implementation-plan"
    version: 1

# === 範圍管控 ===
guardrails:
  scope_source: "scope"
  out_of_scope_is_blocking: false
  on_scope_violation: "record_warning_and_continue"

# === 前置條件 ===
preconditions:
  - "計劃文件存在於docs/implementation-plan/*並匹配task_id"
  - "計劃範本版本 == 1"
  - "metadata包含task_id、project_name、owner、date"
  - "sources路徑解析"
  - "assumptions和constraints已確認"

# === 執行協議 ===
execution_protocol:
  
  enforcement_compliance:
    mandatory_enforcement_file: "/Users/tszkinlai/Coding/AI workflow/core/dev/enforcement/refactor-developer-enforcement.md"
    note: "All detailed enforcement rules, validation criteria, and execution requirements are defined in the refactor enforcement file"

output_contracts:
  objectives: { $ref: "#/schemas/objectives_v1" }
  modules: { $ref: "#/schemas/modules_v1" }

schemas:

  objectives_v1:
    $id: "schemas/objectives_v1"
    type: object
    required: ["F-IDs", "N-IDs", "acceptance_criteria"]
    properties:
      F-IDs:
        type: array
        items:
          type: string
          pattern: "^F-[0-9]+$"
        minItems: 1
      N-IDs:
        type: array
        items:
          type: string
          pattern: "^N-[0-9]+$"
      acceptance_criteria:
        type: array
        items:
          type: object
          required: ["F-ID", "criteria"]
          properties:
            F-ID:
              type: string
              pattern: "^F-[0-9]+$"
            criteria:
              type: array
              items:
                type: string
        minItems: 1
    additionalProperties: false

  modules_v1:
    $id: "schemas/modules_v1"
    type: object
    required: ["modules"]
    properties:
      modules:
        type: array
        items:
          type: object
          required: ["name", "interfaces"]
          properties:
            name:
              type: string
            interfaces:
              type: array
              items:
                type: object
                required: ["name", "methods"]
                properties:
                  name:
                    type: string
                  methods:
                    type: array
                    items:
                      type: object
                      required: ["name", "inputs", "outputs"]
                      properties:
                        name: { type: string }
                        inputs:
                          type: array
                          items:
                            type: object
                        outputs:
                          type: object
            reuse:
              type: array
              items:
                type: string
    additionalProperties: false

# === 階段定義 ===
# 詳細的驗證規則和品質標準在refactor enforcement文件中定義
validation_rules:
  note: "Detailed validation rules and quality standards are defined in the refactor enforcement file"
  
  stage_sequence:
    - workflow_initialization
    - scope_comprehension
    - objectives_and_acceptance
    - architecture_and_modules
    - tdd_cycle_planning
    - tests_first
    - implementation
    - quality_gates
    - milestones_timeline
    - dependencies
    - estimation_tracking
    - risks_changes
    - handover_docs
    - definition_of_done

  error_handling:
    validation_errors:
      missing_stage:
        severity: "warning"
        message: "Mandatory stage not completed"
        action: "append_warning_and_continue"
      
      scope_violation:
        severity: "warning"
        message: "Implementation outside of defined scope"
        action: "append_warning_and_continue"
      
      missing_tests:
        severity: "warning"
        message: "Tests not written before implementation"
        action: "append_warning_and_continue"
      
      tdd_violation:
        severity: "warning"
        message: "TDD cycle not followed - tests should be written first"
        action: "append_warning_and_continue"
      
      behavior_change_detected:
        severity: "critical_warning"
        message: "Behavior change detected - verify if intentional for refactoring"
        action: "append_warning_and_continue"

  format_contracts:
    - stage: "objectives_and_acceptance"
      must_validate_against: "objectives"
      on_failure: "append_warning_and_continue"
    - stage: "architecture_and_modules"
      must_validate_against: "modules"
      on_failure: "append_warning_and_continue"

    - stage: "tdd_cycle_planning"
      must_validate_against: "tdd_plan"
      on_failure: "append_warning_and_continue"

# === 工作流程階段 ===
stages:
  - id: "workflow_initialization"
    title: "工作流程初始化"
    mandatory: true
    validation_checkpoint: true
    actions:
      - load: ["/Users/tszkinlai/Coding/AI workflow/core/dev/workflow/refactor-developer-workflow.yaml"]
      - detect_developer_type: "refactor"
      - resolve_plan_by_task_id: true
      - verify_preconditions: true

  - id: "scope_comprehension"
    title: "範圍理解"
    mandatory: true
    validation_checkpoint: true
    actions:
      - read: ["context.summary", "context.background", "context.goals"]
      - copy_to_notes: ["context.goals"]
      - review: ["scope.in_scope", "scope.out_of_scope"]
      - check_for_existing_implementation:
          - scan_codebase_for_related_changes: true
          - identify_existing_patterns_and_dependencies: true
          - understand_current_implementation_state: true
          - note_potential_conflicts_with_current_scope: true

  - id: "objectives_and_acceptance"
    title: "目標與驗收"
    mandatory: true
    validation_checkpoint: true
    actions:
      - extract_functional_objectives_as: "F-IDs"
      - extract_non_functional_objectives_as: "N-IDs"
      - attach_acceptance_criteria: true
      - establish_baseline_behavior: true

  - id: "architecture_and_modules"
    title: "架構與模組"
    mandatory: true
    validation_checkpoint: true
    actions:
      - read: ["approach.architecture_overview"]
      - run_full_test_suite_and_record_results: true
      - capture_public_APIs_and_contracts: true
      - trace_critical_paths_and_side_effects: true
      - measure_non_functional_baselines: true
      - for_each: "approach.modules"
        do:
          - define_first: "interfaces"
          - identify: "reuse"
          - create: "module_skeletons_with_feature_flags"

  - id: "tdd_cycle_planning"
    title: "TDD循環規劃 (重構特化)"
    mandatory: true
    validation_checkpoint: true
    actions:
      - plan_tdd_cycles_per: "F-IDs"
      - define_test_scenarios_for_each: "acceptance_criteria"
      - plan_characterization_testing_strategy: true
      - identify_behavior_preservation_tests: true
      - plan_refactoring_safety_measures: true
      - define_test_data_requirements: true
      - plan_mock_and_stub_strategies: true
      - define_test_environment_setup: true
      - create_tdd_iteration_plan: true
      - plan_rollback_testing: true

  - id: "tests_first"
    title: "測試優先 (TDD紅階段 - 重構特化)"
    mandatory: true
    validation_checkpoint: true
    actions:
      - 🚨_TDD_MANDATORY: "WRITE_TESTS_BEFORE_IMPLEMENTATION"
      - create_tests_for_existing_behavior: true
      - assert_invariants_and_contracts: true
      - unit_tests_per_module_aligned_to: "F-IDs"
      - integration_tests_for: ["interfaces", "routing", "api_flows", "failure_paths"]
      - acceptance_tests_mirroring: "acceptance_criteria_per_F-ID"
      - ensure_tests_fail_initially: "RED_PHASE_OF_TDD"
      - create_behavior_preservation_tests: true
      - document_test_behavior_expectations: true
      - create_test_data_fixtures: true
      - establish_test_baselines: true

  - id: "implementation"
    title: "實作 (TDD綠階段 - 重構特化)"
    mandatory: true
    validation_checkpoint: true
    actions:
      - 🚨_TDD_ENFORCEMENT: "IMPLEMENT_MINIMAL_CODE_TO_PASS_TESTS"
      - small_steps_atomic_commits: true
      - keep_green_throughout: true
      - migrate_APIs_or_components_with_adapters: true
      - implement_handlers_and_components_per: ["interfaces", "F-IDs"]
      - run_tests_after_each_change: "KEEP_TESTS_GREEN"
      - enforce_constraints: true
      - traceability:
          reference_task_id: "metadata.task_id"
          in: ["PR_titles", "commits", "code_annotations"]

  - id: "quality_gates"
    title: "品質門檻 (TDD重構階段 - 重構特化)"
    mandatory: true
    validation_checkpoint: true
    actions:
      - 🚨_TDD_REFACTOR: "REFACTOR_WHILE_KEEPING_TESTS_GREEN"
      - ensure: "coverage_and_static_analysis_thresholds >= quality_gates"
      - validate_non_functional: "N-IDs_measurements"
      - security_checks: ["dependencies", "SAST"]
      - compare_non_functional_to_baseline: true
      - ensure_no_api_breaks: true
      - refactor_code_while_maintaining_behavior: true
      - improve_code_structure_and_readability: true
      - eliminate_code_duplication: true
      - optimize_performance_without_breaking_tests: true
      - verify_behavior_preservation: true

  - id: "milestones_timeline"
    title: "里程碑與時程"
    mandatory: true
    validation_checkpoint: true
    actions:
      - map_dev_tasks_to: "milestones.schedule"
      - mark_done_when: "milestones.done_definition_satisfied"

  - id: "dependencies"
    title: "依賴項"
    mandatory: true
    validation_checkpoint: true
    actions:
      - verify_versions_and_SLAs: "dependencies.external"
      - coordinate_internal_owners: "dependencies.internal"

  - id: "estimation_tracking"
    title: "估算與追蹤"
    mandatory: true
    validation_checkpoint: true
    actions:
      - report_progress_using: "estimation.method"
      - keep_remaining_effort_per_work_item: true
      - update_confidence_against: "estimation.summary.confidence"

  - id: "risks_changes"
    title: "風險與變更"
    mandatory: true
    validation_checkpoint: true
    actions:
      - review_weekly: "risks"
      - on_realized_risk: ["execute_mitigation", "then_contingency"]
      - on_scope_creep: "open_question_and_pause"

  - id: "handover_docs"
    title: "交接與文件"
    mandatory: true
    validation_checkpoint: true
    actions:
      - record_implementation_summary: true
      - note_deviations_and_clarifications: true

  - id: "definition_of_done"
    title: "完成定義"
    mandatory: true
    validation_checkpoint: true
    actions:
      - require: [
          "all_F-IDs_pass_acceptance_tests",
          "all_N-IDs_verified_by_measurement",
          "behavior_exactly_preserved",
          "no_api_breaking_changes",
          "baseline_performance_maintained_or_improved",
          "no_unresolved_open_questions",
          "PRs_merged_CI_green"
        ]

# === Refactor開發者特化配置 ===
# 本工作流程專注於重構特有的專門化邏輯
# 基礎配置和通用階段繼承自統一設定
refactor_specializations:
  # 重構核心特色：基線捕獲與行為保持
  baseline_capture:
    - run_full_test_suite_and_record_results: true
    - capture_public_APIs_and_contracts: true  
    - trace_critical_paths_and_side_effects: true
    - measure_non_functional_baselines: true
    - document_current_behavior_patterns: true
  
  # 特性測試：確保行為不變
  characterization_tests:
    - create_tests_for_existing_behavior: true
    - assert_invariants_and_contracts: true
    - create_regression_prevention_tests: true
    - validate_external_interfaces: true
  
  # 漸進式重構：小步驟、安全變更
  incremental_refactor:
    - small_steps_atomic_commits: true
    - keep_green_throughout: true
    - migrate_APIs_or_components_with_adapters: true
    - use_strangler_fig_pattern_when_appropriate: true
    - maintain_backward_compatibility: true
  
  # 驗證與確保：行為對等性
  verification:
    - compare_non_functional_to_baseline: true
    - ensure_no_api_breaks: true
    - validate_performance_maintained_or_improved: true
    - confirm_external_behavior_unchanged: true
    - run_comprehensive_regression_tests: true

  # 重構特有的文檔要求
  documentation_requirements:
    - document_refactoring_strategy: true
    - document_behavior_preservation_approach: true
    - document_performance_impact_analysis: true
    - document_risk_mitigation_measures: true
    - document_rollback_procedures: true

# === 關鍵成功因素 ===
critical_success_factors:
  - "Read workflow and plan files FIRST - never start without them"
  - "Stay within scope boundaries - pause on any scope questions"
  - "Extract objectives as F-IDs and N-IDs - maintain traceability"
  - "Capture baseline behavior before starting any changes - CRITICAL for refactoring"
  - "🚨 TDD MANDATORY: Write tests BEFORE implementation - RED phase first"
  - "🚨 TDD ENFORCEMENT: Implement minimal code to pass tests - GREEN phase"
  - "🚨 TDD REFACTOR: Refactor while keeping tests green - REFACTOR phase"
  - "Write characterization tests before implementation - ensure behavior preservation"
  - "Make small, atomic changes that keep tests green - refactoring safety principle"
  - "Maintain traceability - task_id in PRs, commits, code"
  - "Meet quality gates - coverage, static analysis, performance"
  - "Verify no behavior changes and no API breaks - refactoring golden rule"
  - "Complete definition of done - all criteria must be satisfied"
  - "NEVER change external behavior - only internal structure"
  - "Always have a rollback plan - refactoring risk management"
  - "Measure performance before and after - prevent regressions"
  - "NEVER skip TDD cycle - tests must be written first"
  - "Keep tests green throughout implementation - TDD safety principle"
  - "Use tests to verify behavior preservation - refactoring TDD requirements"

# === 工作流程違規回應 ===
workflow_violation_responses:
  - "Missing stage execution: Append warning and continue"
  - "Scope violation: Append warning and continue; open question asynchronously"
  - "Plan deviation: Append warning; document decision"
  - "🚨 TDD VIOLATION: CRITICAL WARNING - tests must be written before implementation"
  - "Missing tests: Append warning; prioritize remediation next iteration"
  - "Quality gate failure: Append warning; include measurements and remediation plan"
  - "Behavior change detected: CRITICAL WARNING - verify if intentional"
  - "API break detected: CRITICAL WARNING - coordinate with stakeholders"
  - "Performance regression: Append warning; include optimization plan"
  - "Missing traceability: Append warning; add task_id references retroactively"
  - "Handover_docs_stage_skipped: Append warning; ensure documentation post-hoc"
  - "🚨 TDD CYCLE INCOMPLETE: Append warning; ensure RED-GREEN-REFACTOR cycle completed"
  - "🚨 BEHAVIOR_PRESERVATION_VIOLATION: CRITICAL WARNING - refactoring must preserve behavior"

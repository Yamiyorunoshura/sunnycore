---
# 統一任務規劃工作流程
# 專注於階段定義和執行順序，具體規則請參考執行規範文件
template: unified-task-planning-workflow  
version: 2.0

# 職責分工：
# - 此文件：定義工作流程階段和執行順序
# - 執行規範：定義所有強制規則和驗證標準
# - 確定性設定：定義所有確定性參數
# - 範本：定義輸出文檔結構

workflow:
  name: "統一任務規劃證據驅動工作流程"
  description: "嚴格遵循範本結構創建實施計劃並進行全面驗證，整合所有執行和驗證邏輯"
  agent: task-planner
  enforcement_level: "lenient"
  halt_on_validation_failure: false

  # 確定性與效率提示（引用統一配置）
  determinism:
    note: "所有確定性設定請參考 /Users/tszkinlai/Coding/AI workflow/core/dev/config/deterministic-settings.yaml"
    reference_file: "/Users/tszkinlai/Coding/AI workflow/core/dev/config/deterministic-settings.yaml"

  execution_hints:
    note: "並行執行和快取設定請參考 deterministic-settings.yaml 中的 parallel_settings 和 cache_settings"
    reference_file: "/Users/tszkinlai/Coding/AI workflow/core/dev/config/deterministic-settings.yaml"

# === 輸入定義 ===
inputs:
  task_id: "<required>"
  project_root: "<auto>"

# === 專案根目錄解析 ===
project_root_resolution:
  prefer:
    - env: "CLAUDE_PROJECT_ROOT"
    - detect_git_root: true
    - find_upwards_for:
      - "docs/specs/task.md"
      - ".git"
  on_failure: "use_cwd"

# === 範圍管控 ===
guardrails:
  must_write_inside_project_root: true
  readonly_paths:
    - "docs/specs/**"
  on_violation: "append_warning_and_continue"

# === 執行協議 ===
execution_protocol:
  
  enforcement_compliance:
    mandatory_enforcement_file: "/Users/tszkinlai/Coding/AI workflow/core/dev/enforcement/task-planner-enforcement.md"
    note: "All detailed enforcement rules, validation criteria, and execution requirements are defined in the enforcement file"
    


# === 階段定義 ===
# 所有詳細的驗證規則、品質標準和執行協議都在執行規範文件中定義
validation_rules:
  note: "完整的驗證規則和品質標準請參考執行規範文件"
  reference_file: "/Users/tszkinlai/Coding/AI workflow/core/dev/enforcement/task-planner-enforcement.md"
  summary: "此工作流程專注於階段定義和執行順序，具體規則請參考執行規範"
  
  stage_sequence:
    - workflow_initialization
    - input_collection  
    - analysis_and_strategy
    - template_population
    - document_output
    - finalization

  error_handling:
    note: "詳細的錯誤處理策略請參考執行規範文件"
    reference_file: "/Users/tszkinlai/Coding/AI workflow/core/dev/enforcement/task-planner-enforcement.md"

# === 工作流程階段 ===
stages:
  - id: "workflow_initialization"
    title: "Initialize workflow and load template"
    mandatory: true
    validation_checkpoint: true
    actions:
      - tool_call: "read_file"
        target: "/Users/tszkinlai/Coding/AI workflow/core/dev/workflow/unified-task-planning-workflow.yaml"
        purpose: "Load and internalize complete workflow"
        validation: "workflow_file_parsed"
      - tool_call: "read_file"
        target: "/Users/tszkinlai/Coding/AI workflow/core/dev/templates/implementation-plan-tmpl.yaml"
        purpose: "Load and internalize template structure"
        validation: "template_structure_understood"
      - resolve_project_root:
        - check_env_variable: "CLAUDE_PROJECT_ROOT"
        - detect_git_root: true
        - find_kiro_specs_directory: true
        - fallback_to_cwd: true
      - checkpoint_validation:
        - verify_files_loaded: ["workflow", "template"]
        - confirm_project_root_resolved: true
        - halt_if_failed: false
    definition_of_ready: []
    definition_of_done:
      - "workflow_file_parsed"
      - "template_structure_understood"
      - "project_root_resolved"

  - id: "input_collection"
    title: "Collect and validate planning inputs"
    mandatory: true
    validation_checkpoint: true
    actions:
      - execution_hints:
          parallelize_tool_calls: true
          content_hash_cache: true
      - tool_call: "read_file"
        target: "docs/specs/task.md"
        purpose: "Load task specification"
        validation: "task_spec_loaded"
        expectation: "task named with numbers(1/2/3/...) and having several subtasks(1.1/1.2/1.3/...)"
      - tool_call: "read_file"
        target: "docs/specs/requirements.md"
        purpose: "Load requirements specification"
        validation: "requirements_loaded"
      - tool_call: "read_file"
        target: "docs/specs/design.md"
        purpose: "Load design specification"
        validation: "design_loaded"
      - checkpoint_validation:
        - verify_all_specs_read: true
        - document_missing_inputs: true
    definition_of_done:
      - "task_spec_loaded"
      - "requirements_loaded"
      - "design_loaded"

  - id: "analysis_and_strategy"
    title: "Plan analysis and strategy"
    mandatory: true
    validation_checkpoint: true
    actions:
      - analyze_requirements:
        - extract_functional_requirements: true
        - identify_non_functional_requirements: true
        - understand_constraints_and_assumptions: true
      - define_planning_strategy:
        - determine_architecture_approach: true
        - identify_key_risks_and_dependencies: true
        - establish_testing_strategy: true
      - checkpoint_validation:
        - verify_requirements_analysis_completed: true
        - confirm_strategy_defined: true
    definition_of_done:
      - "requirements_analyzed"
      - "strategy_defined"

  - id: "template_population"
    title: "Populate implementation plan template"
    mandatory: true
    validation_checkpoint: true
    actions:
      - populate_metadata:
        - task_id: "from_input"
        - project_name: "from_specs"
        - owner: "from_context"
        - date: "current_date"
        - project_root: "resolved_path"
        - sources: "all_spec_file_paths"
        - assumptions: "identified_assumptions"
        - constraints: "identified_constraints"
      - populate_context:
        - summary: "1_to_3_sentences"
        - background: "from_specs"
        - goals: "extracted_from_requirements"
      - populate_objectives:
        - functional: "with_acceptance_criteria"
        - non_functional: "with_measurements"
      - populate_scope:
        - in_scope: "clearly_defined"
        - out_of_scope: "explicitly_stated"
      - populate_approach:
        - architecture_overview: "from_design"
        - modules: "with_interfaces_and_reuse"
        - data: "schema_changes_and_migrations"
        - test_strategy: "unit_integration_acceptance"
        - quality_gates: "measurable_criteria"
      - populate_milestones:
        - deliverables: "concrete_outputs"
        - done_definition: "clear_criteria"
      - populate_timeline:
        - realistic_schedule: true
        - milestone_mapping: true
      - populate_dependencies:
        - external: "with_versions"
        - internal: "with_owners"
      - populate_estimation:
        - method_and_breakdown: true
        - confidence_level: true
      - populate_risks:
        - probability_impact_mitigation: true
        - contingency_plans: true
      - populate_open_questions:
        - document_or_mark_none: true
      - checkpoint_validation:
        - verify_all_sections_populated: true
        - confirm_no_placeholders: true
        - validate_template_compliance: true
        - run_linters: true  # 依據 validation_rules.linters
        - run_consistency_checks: true  # 依據 validation_rules.consistency_checks
        - apply_definition_of_done: true

  - id: "document_output"
    title: "Generate and save implementation plan"
    mandatory: true
    validation_checkpoint: true
    actions:
      - tool_call: "create_directory"
        target: "{{project_root}}/docs/implementation-plan/"
        purpose: "Ensure output directory exists"
      - tool_call: "write_file"
        target: "{{project_root}}/docs/implementation-plan/{{task_id}}-plan.md"
        purpose: "Write implementation plan document"
        content: "populated_template_as_markdown"
      - tool_call: "write_file"
        target: "{{project_root}}/docs/index/plan-index.jsonl"
        purpose: "Update plan index"
        mode: "append"
        content: "index_record_json"
      - indexing_policy:
          record_key: "task_id + sources_content_hash"
          mode: "append_dedup_by_key"
          record_fields:
            - task_id
            - document_path
            - sources_content_hash
            - workflow_template_version
            - timestamp
      - checkpoint_validation:
        - verify_file_written: true
        - confirm_path_under_project_root: true
        - validate_index_updated: true

  - id: "finalization"
    title: "Validate and finalize plan"
    mandatory: true
    validation_checkpoint: true
    actions:
      - tool_call: "read_file"
        target: "{{project_root}}/docs/implementation-plan/{{task_id}}-plan.md"
        purpose: "Final validation read"
      - final_validation:
        - compare_against_template_structure: true
        - verify_all_sections_populated: true
        - confirm_no_placeholders_remain: true
        - validate_context_preservation: true
      - template_compliance_validation:
        - check_metadata_fields_populated: true
        - verify_no_placeholder_brackets: true
        - confirm_valuable_context_preserved: true
        - validate_markdown_structure: true
        - run_linters: true
        - run_consistency_checks: true
      - completion_certification:
        - all_validations_passed: true
        - document_ready_for_development: true
      - report_completion_status: true

# === 關鍵成功因素 ===
critical_success_factors:
  - "優先讀取工作流程和範本文件 - 絕不跳過此步驟"
  - "正確解析專案根目錄 - 確保輸出路徑有效"
  - "收集所有必要輸入 - 規格文件和深入研究"
  - "徹底分析需求 - 理解後再規劃"
  - "完整填充範本 - 不允許佔位符"
  - "保持有價值的上下文 - 包含所有具體技術細節"
  - "在檢查點驗證 - 確保每個階段的品質"
  - "生成可執行的計劃 - 準備供開發團隊使用"
  - "嚴格遵循執行規範 - 參考 task-planner-enforcement.md 中的所有規則"

# === 工作流程違規回應 ===
workflow_violation_responses:
  note: "詳細的違規處理策略和補救措施請參考執行規範文件"
  reference_file: "/Users/tszkinlai/Coding/AI workflow/core/dev/enforcement/task-planner-enforcement.md"
  summary:
    - "階段執行缺失：返回並完成跳過的階段"
    - "範本不完整：識別缺失部分並填充"
    - "佔位符值：用實際內容替換所有佔位符"
    - "通用內容：添加具體技術細節和上下文"
    - "格式無效：修正格式以完全匹配範本"
    - "上下文缺失：提取並包含規格中的有價值信息"

# === 輸出配置 ===
output:
  path: "{{project_root}}/docs/implementation-plan/"
  filename: "{{task_id}}-plan.md"
  format: "markdown"
  index_path: "{{project_root}}/docs/index/plan-index.jsonl"

---
description: 結案架構模板（Concluded Architecture Template）
last_updated: '2025-09-30'
name: concluded-architecture-tmpl
template_type: yaml
version: '1.0'
---

# 重要性排序：後端架構 > 資料架構 > 安全/合規 > 基礎設施 > 前端架構 > 橫切關注 > 品質屬性與SLO > 風險/假設/決策 > 圖 > 參考

conclusion_overview:
  status: "[approved|approved_with_risks|deprecated]"
  decision_date: "[YYYY-MM-DD]"
  scope: "[system|subsystem]"
  summary: "[1-3 句總結最終架構與關鍵取捨理由]"

backend_architecture:
  context: "[核心職責、邊界、BFF 有無、關鍵使用案例]"
  services:
    - name: "[service_name]"
      type: "[monolith|microservice|functions]"
      responsibilities: []
      interfaces:
        sync_apis: []
        async_events: []
      data_owned: []
      dependencies: []
      scaling: "[k8s_hpa|serverless|manual]"
      resilience: ["circuit_breaker", "retry", "idempotency"]
  api_contracts:
    style: "[REST|gRPC|GraphQL]"
    schema: "[OpenAPI/Proto/SDL 路徑或連結]"
    versioning: "[url|header|schema]"
  data_access:
    orm_or_dao: "[sqlalchemy|prisma|hibernate|django_orm|other]"
    caching:
      strategy: "[read-through|write-back|cache-aside]"
      ttl_seconds: "[number]"
  performance:
    expected_p95_ms: 200

data_architecture:
  storage:
    primary_db:
      engine: "[postgres|mysql|mongo|other]"
      model: "[3NF|cqrs|event_sourcing]"
    cache:
      engine: "redis"
      usage: ["session", "hot_keys", "rate_limit"]
    analytics:
      warehouse: "[bigquery|snowflake|redshift|other]"
  schema_governance:
    ownership: "[team]"
    migrations: "[flyway|liquibase|alembic|prisma_migrate]"
  data_integrity:
    consistency: "[strong|eventual|bounded-staleness]"
    backup_restore:
      rpo: "1h"
      rto: "4h"
  pii_and_retention:
    classification: "[public|internal|restricted]"
    retention_policy: "[policy_name_or_link]"

security_and_compliance:
  authn:
    method: "[JWT+refresh|session|oidc]"
    provider: "[auth0|cognito|internal]"
  authz:
    model: "[RBAC|ABAC|ReBAC]"
  secrets_management: "[vault|kms|secret_manager]"
  transport_security: "TLS 1.3"
  data_encryption:
    at_rest: "AES-256"
    in_transit: "TLS 1.3"
  threat_model: ["spoofing", "tampering", "repudiation", "information_disclosure", "dos", "elevation_of_privilege"]
  compliance: ["GDPR", "SOC2", "PCI-DSS"]

infrastructure:
  cloud: "[aws|gcp|azure|on_prem]"
  region_az:
    regions: ["[region]"]
    multi_az: true
  runtime:
    container_orchestration: "[kubernetes|ecs|nomad]"
    ingress: "[alb|nginx_ingress|api_gateway]"
    service_mesh: "[istio|linkerd|none]"
  networking:
    vpc_cidr: "[cidr]"
    private_subnets: true
    egress: "[natgw]"
    edge:
      cdn: "[cloudfront|cloudflare|fastly]"
      waf: true
  ci_cd:
    build: "[github_actions|gitlab_ci|jenkins]"
    deploy: "[blue_green|canary|rolling]"
  observability:
    logging: "[elk|cloudwatch|stackdriver]"
    metrics: "[prometheus|datadog]"
    tracing: "[otel|jaeger|xray]"
  cost_and_capacity:
    budget_cap_monthly_usd: "[number]"
    auto_scaling:
      hpa: true
      target_cpu: "70%"

frontend_architecture:
  clients:
    web:
      framework: "[react|vue|angular]"
      language: "[typescript|javascript]"
      state: "[redux|zustand|pinia|vuex]"
    mobile:
      platform: "[ios|android|flutter|react_native]"
  bff:
    present: "[yes|no]"
    responsibilities: ["aggregation", "auth_context", "rate_limit"]
  api_consumption:
    protocol: "[rest|graphql|grpc-web]"
    error_handling: ["retry_policy", "offline_queue"]
  performance:
    rendering: "[ssr|csr|isr|ssg]"
    assets: ["code_splitting", "lazy_loading", "compression", "http3"]

cross_cutting_concerns:
  reliability:
    availability_target: "99.9%"
    failure_domains: ["region", "az", "node", "pod"]
    patterns: ["bulkhead", "circuit_breaker", "graceful_degradation"]
  privacy_by_design: true
  i18n_l10n: "[needed|n/a]"
  accessibility: "WCAG 2.1 AA"

quality_attributes_and_slos:
  slos:
    latency_p95_ms: 200
    error_rate_pct: 0.1
    availability_pct: 99.9
  capacity:
    peak_rps: "[value]"
    concurrency: "[value]"
  test_strategy:
    levels: ["unit", "integration", "e2e", "load", "chaos"]
    coverage_target_pct: 85

risks_assumptions_and_decisions:
  assumptions: []
  known_risks:
    - id: "RSK-1"
      title: "[risk]"
      mitigation: "[plan]"
  architectural_decisions:
    - id: "ADR-001"
      title: "[decision]"
      status: "[accepted|rejected|superseded]"
      context: "[why]"
      consequences: "[trade-offs]"

architecture_diagram:
  mermaid: |
    ```mermaid
    graph TB
      %% Edge / Perimeter
      CDN[CDN] --> WAF[WAF]
      WAF --> LB[Load Balancer]

      subgraph FE[Frontend]
        WEB[Web App]
        MOB[Mobile App]
      end

      WEB --> CDN
      MOB --> CDN

      LB --> IGW[Ingress/Gateway]
      IGW --> BFF[BFF / API Gateway]

      subgraph BE[Backend Services]
        AUTH[Auth Service]
        CORE[Core Service]
        NOTIF[Notification Service]
      end

      BFF --> AUTH
      BFF --> CORE
      BFF --> NOTIF

      subgraph DATA[Data Layer]
        DB[(Primary DB)]
        CACHE[(Redis Cache)]
        MQ[[Message Queue]]
      end

      CORE --> DB
      CORE --> CACHE
      CORE --> MQ

      subgraph OBS[Observability]
        LOG[Centralized Logging]
        METRICS[Metrics / Prometheus]
        TRACE[Tracing / Jaeger]
      end

      CORE --> LOG
      CORE --> METRICS
      CORE --> TRACE
    ```

references:
  documents: []
  repo_paths: []
  contacts:
    owner_team: "[team]"
    approver: "[name]"



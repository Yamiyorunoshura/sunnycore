---
# Review Report Template
# 審查報告模板

task_id: ""
task_name: ""
reviewer: ""
date: ""
domain: ""  # backend/frontend/database/integration/infrastructure
---

acceptance-decision: ""  # Accept/Accept with changes/Reject

rationale: ""

# Domain-specific quality scores (dimensions vary by domain)
quality-scores:
  dimensions: {}  # Dynamic based on domain (e.g., api-design, security, error-handling for backend)
  overall_score: 0.0
  maturity_level: ""  # Platinum (4.0)/Gold (3.0)/Silver (2.0)/Bronze (1.0)

scoring-guide: |
  Platinum (4.0): Fully compliant, no issues
  Gold (3.0): Meets standards, 1-2 minor issues
  Silver (2.0): Minimum standards, 3-4 issues needing improvement
  Bronze (1.0): Below standards, serious issues or critical gaps

test-summary:
  all_tests_passed: true
  coverage_percentage: ""
  test_execution_output: ""
  missing_tests: []
  performance_metrics: []

# Consolidated findings (replaces separate code/security/performance/documentation reviews)
findings:
  - severity: ""  # critical/high/medium/low
    category: ""  # code-quality/security/performance/testing/documentation/architecture
    description: ""
    location: ""  # file_path:line_number
    evidence: ""
    recommendation: ""
    action_required: ""

alignment-verification:
  requirements_fulfilled: []
  requirements_partial: []
  requirements_missing: []
  architecture_alignment: ""
  plan_adherence: ""

risk-assessment: ""  # Low/Medium/High

source-references:
  plan_path: ""
  dev_notes_path: ""
  code_paths: []
  test_paths: []
